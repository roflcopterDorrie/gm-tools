{"version":3,"sources":["components/Card.js","components/ContentEditable.js","components/LocationList.js","components/CharacterList.js","components/InteractionList.js","components/Location.js","components/Character.js","components/Quest.js","components/MonsterList.js","components/Encounter.js","components/Search.js","components/PlayerStat.js","components/PlayerStats.js","components/Toolbar.js","components/Timeline.js","components/Grid.js","components/EncounterMap.js","components/EncounterTracker.js","App.js","serviceWorker.js","index.js","images/dnd-beyond-logo.svg"],"names":["Card","updateData","id","name","value","props","data","componentName","updateDataLogEvent","logEvent","index","allData","parentId","addEvent","toolbar","tools","type","push","className","onClick","newCard","deleteCard","map","window","open","e","addData","React","PureComponent","ContentEditable","onBlur","evt","hasOwnProperty","target","innerText","trim","Element","this","tag","contentEditable","suppressContentEditableWarning","placeholder","join","content","Component","LocationList","filteredLocations","locations","reduce","accumulator","location","delta","key","showCard","length","CharacterList","filtered","characters","character","parentType","role","InteractionList","addInteraction","deleteInteraction","deleteData","interaction","style","position","right","top","Location","changeMap","setState","mapInput","state","parentLocation","parentLocationData","getData","class","float","mapPreview","src","description","Character","motivations","weaknesses","Quest","MonsterList","getMonsterList","selectedId","count","onChange","monsterList","monster","deleteMonster","deltaId","monsterId","selectedMonsters","addMonster","concat","acc","bind","Encounter","onDrop","picture","pictureDataURLs","datas","wantedWidth","wantedHeight","img","document","createElement","onload","width","height","canvas","ctx","getContext","drawImage","toDataURL","withIcon","buttonText","imgExtension","maxFileSize","singleImage","withLabel","monsters","staticData","defaultValue","difficulty","tactics","environmental","treasure","outcome","Search","search","dataStoreTypes","getDataStoreTypes","includes","component","store","item","toLowerCase","icon","PlayerStat","pp","ac","proficiencies","languages","PlayerStats","playerStats","player","Toolbar","exportData","Blob","url","URL","createObjectURL","getElementById","href","download","Timeline","adjustTime","amount","stateCopy","JSON","parse","stringify","timeUp","min","parseInt","datetime","minute","hour","day","month","year","updateConfig","formatTime","formatDate","monthNames","formatShortDate","timeBetween","start","end","diff","datetimeToEpoc","minutes","niceText","years","months","days","hours","mins","newestToOldest","first","second","deleteEvent","getConfig","timeline","events","sort","event","title","summary","nextEvent","eventParent","getDataStore","dayBreak","HOUR","ResponsiveReactGridLayout","WidthProvider","Responsive","dataComponents","toolboxComponents","Grid","createCard","el","undefined","getAllData","getStaticData","grid","i","data-grid","getAllDataByType","closeCard","layout","keyCounter","x","y","w","h","_","reject","o","onLayoutChange","localStorage","setItem","getItem","body","classList","remove","add","cols","lg","md","sm","xs","xxs","rowHeight","draggableHandle","drag","EncounterMap","resetGrid","mapWidth","gridSize","offsetHeight","fog","clearFog","drawGrid","size","rows","Math","ceil","mapHeight","fogs","d3","selectAll","attr","xpos","ypos","row","col","reveal","enter","append","d","on","saveFog","querySelectorAll","gridItem","getAttribute","toggleFog","revealToggle","hideToolbar","setAttribute","addEventListener","EncounterTracker","getMonsterData","iframes","monsterData","dndbeyond","logo","App","stores","config","dataStore","callback","nextId","dataInit","dataMerged","field","imageData","image","Image","setTimeout","write","outerHTML","quests","encounters","interactions","path","children","EncounterMapRoute","EncounterTrackerRoute","useParams","createBrowserHistory","basename","process","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.70842a11.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Card extends React.PureComponent {\n\n  updateData = (id, name, value) => {\n    this.props.updateData(this.props.data.id, this.componentName, name, value);\n  };\n\n  updateDataLogEvent = (id, name, value) => {\n    this.updateData(id, name, value);\n    this.logEvent();\n  };\n\n  logEvent = () => {\n    let logEvent = true;\n    for (const index in this.props.allData['events']) {\n      if (this.props.allData['events'][index].parentId === this.props.data.id) {\n        logEvent = false;\n        break;\n      }\n    }\n    if (logEvent) {\n      this.props.addEvent(this.props.data.id, this.componentName);\n    }\n  }\n\n  toolbar = tools => {\n    let toolbar = [];\n    tools = tools || ['delete'];\n    for (let type in tools) {\n      if (tools[type] === 'add-location') {\n        toolbar.push(\n          <button className=\"icon\" onClick={() => this.props.newCard('Location', this.props.data.id, this.componentName)}><i className=\"fas fa-fw fa-globe-americas\"></i></button>\n        );\n      } else if (tools[type] === 'add-character') {\n        toolbar.push(\n          <button className=\"icon\" onClick={() => this.props.newCard('Character', this.props.data.id, this.componentName)}><i className=\"fas fa-fw fa-user-alt\"></i></button>\n        );\n      } else if (tools[type] === 'add-encounter') {\n        toolbar.push(\n          <button className=\"icon\" onClick={() => this.props.newCard('Encounter', this.props.data.id, this.componentName)}><i className=\"fas fa-fw fa-skull-crossbones\"></i></button>\n        );\n      } else if (tools[type] === 'delete') {\n        toolbar.push(\n          <button className=\"icon\" onClick={() => this.props.deleteCard(this.componentName, this.props.data.id)}><i className=\"fas fa-fw fa-trash-alt\"></i></button>\n        );\n      } else if (tools[type] === 'encounter-map') {\n        if (this.props.data.map) {\n          toolbar.push(\n            <button className=\"icon\" onClick={() => window.open('/encounter-map/' + this.props.data.id)}><i className=\"fas fa-fw fa-map\"></i></button>\n          );\n        }\n      } else if (tools[type] === 'encounter-tracker') {\n        toolbar.push(\n          <button className=\"icon\" onClick={() => window.open('/encounter-tracker/' + this.props.data.id)}><i className=\"fas fa-fw fa-skull-crossbones\"></i></button>\n        );\n      } else if (tools[type] === 'add-player-stat') {\n        toolbar.push(\n          <button className=\"icon\" onClick={(e) => this.props.addData('PlayerStat')}><i className=\"fas fa-fw fa-plus\"></i></button>\n        );\n      } else if (tools[type] === 'event-rest-long') {\n        toolbar.push(\n          <button className=\"icon\" onClick={(e) => this.props.addEvent(-1, 'Long rest')}><i className=\"fas fa-fw fa-campground\"></i>L</button>\n        );\n      } else if (tools[type] === 'event-rest-short') {\n        toolbar.push(\n          <button className=\"icon\" onClick={(e) => this.props.addEvent(-1, 'Short rest')}><i className=\"fas fa-fw fa-campground\"></i>S</button>\n        );\n      } else if (tools[type] === 'event-travel') {\n        toolbar.push(\n          <button className=\"icon\" onClick={(e) => this.props.addEvent(-1, 'Travel')}><i className=\"fas fa-fw fa-route\"></i></button>\n        );\n      } else if (tools[type] === 'event-location-arrive') {\n        toolbar.push(\n          <button className=\"icon\" onClick={(e) => this.props.addEvent(this.props.data.id, 'Location')}><i className=\"fas fa-fw fa-map-marked-alt\"></i></button>\n        );\n      }\n    }\n    return toolbar;\n  };\n\n  render() {\n    return <section></section>;\n  }\n}\n\nexport default Card;","import React from \"react\";\n\nclass ContentEditable extends React.Component {\n\n  onBlur = (evt) => {\n    this.props.onBlur(this.props.hasOwnProperty('id') ? this.props.id : null, this.props.name, evt.target.innerText.trim());\n  };\n\n  render() {\n    const Element = `${this.props.tag}`;\n    return (\n      <Element\n        contentEditable={true}\n        suppressContentEditableWarning={true}\n        onBlur={this.onBlur}\n        placeholder={this.props.placeholder}\n        className={this.props.className ? this.props.className.join(' ') : ''}>\n          {this.props.content||''}\n      </Element>\n    );\n  }\n}\n\nexport default ContentEditable;\n","import React from \"react\";\n\nclass LocationList extends React.PureComponent {\n\n  render() {\n\n    const filteredLocations = this.props.locations.reduce((accumulator, location, delta) => {\n      if (location.parentId === this.props.parentId) {\n        accumulator.push(<li key={delta}>\n          <span className=\"card-minor-minor\">{location.type}</span>\n          <i className=\"fas fa-globe-americas\"></i>&nbsp;\n          <button\n            className=\"link\"\n            onClick={() => this.props.showCard('Location', location.id)}>\n              {location.name}\n          </button>\n        </li>);\n      }\n      return accumulator;\n    }, []);\n\n    // If some locations are found, show them.\n    if (filteredLocations.length) {\n      return (\n        <div>\n          <h3>Locations</h3>\n          <ul className=\"link-list\">\n            {filteredLocations}\n          </ul>\n        </div>\n      );\n    } else {\n      return '';\n    }\n  }\n}\n\nexport default LocationList;\n","import React from \"react\";\n\nclass CharacterList extends React.PureComponent {\n\n  render() {\n\n    const filtered = this.props.characters.reduce((accumulator, character, delta) => {\n      if (character.parentId === this.props.parentId && character.parentType === this.props.parentType) {\n        accumulator.push(<li key={delta}>\n          <span className=\"card-minor-minor\">{character.role}</span>\n          <i className=\"fas fa-user-alt\"></i>&nbsp;\n          <button\n            className=\"link\"\n            onClick={() => this.props.showCard('Character', character.id)}>\n              {character.name}\n          </button>\n        </li>);\n      }\n      return accumulator;\n    }, []);\n\n    // If some locations are found, show them.\n    if (filtered.length) {\n      return (\n        <div>\n          <h3>Characters</h3>\n          <ul className=\"link-list\">\n            {filtered}\n          </ul>\n        </div>\n      );\n    } else {\n      return '';\n    }\n  }\n}\n\nexport default CharacterList;\n","import React from \"react\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass InteractionList extends React.PureComponent {\n\n  updateData = (id, name, value) => {\n    this.props.updateData(id, \"Interaction\", name, value);\n    this.logEvent(id);\n  };\n\n  logEvent = (id) => {\n    let logEvent = true;\n    for (const index in this.props.allData['events']) {\n      if (this.props.allData['events'][index].parentId === id) {\n        logEvent = false;\n        break;\n      }\n    }\n    if (logEvent) {\n      this.props.addEvent(id, 'Interaction');\n    }\n  }\n\n  addInteraction = () => {\n    this.props.addData(\"Interaction\", this.props.parentId, this.props.parentType);\n  }\n\n  deleteInteraction = (id) => {\n    this.props.deleteData('Interaction', id);\n  }\n\n  render() {\n\n    const filtered = this.props.allData['interactions'].reduce((accumulator, interaction, delta) => {\n      if (interaction.parentId === this.props.parentId) {\n        accumulator.push(\n        <div style={{position: 'relative'}}>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={interaction.name || ''}\n            placeholder=\"name\"\n            id={interaction.id}\n          />\n          <button style={{position: 'absolute', right: 0, top: 0}} className=\"link\" onClick={(e) => {this.deleteInteraction(interaction.id)}}>\n            <i className=\"fas fa-times\"></i>\n          </button>\n        </div>\n        );\n      }\n      return accumulator;\n    }, []);\n\n    // If some locations are found, show them.\n    return (\n      <div>\n        <h3>Interactions\n          <button className=\"link\" onClick={this.addInteraction}>\n            <i className=\"fas fa-user-plus\"></i>\n          </button>\n        </h3>\n\n        {filtered}\n      </div>\n    );\n  }\n}\n\nexport default InteractionList;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport ContentEditable from \"components/ContentEditable\";\nimport LocationList from 'components/LocationList.js';\nimport CharacterList from 'components/CharacterList.js';\nimport InteractionList from \"components/InteractionList\";\n\nclass Location extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Location';\n    this.state = {mapInput: false};\n  }\n\n  changeMap = () => {\n    this.setState({mapInput: !this.state.mapInput});\n  }\n\n  render() {\n\n    let parentLocation = '';\n\n    if (this.props.data) {\n      const parentLocationData = this.props.getData('Location', this.props.data.parentId);\n\n      if (parentLocationData) {\n        parentLocation = <span class=\"card-minor\" style={{float: 'right'}}>\n          <i className=\"fas fa-globe-americas\"></i>\n          &nbsp;\n          <button\n            className=\"link\"\n            onClick={() => this.props.showCard('Location', parentLocationData.id)}>\n              {parentLocationData.name}\n          </button>\n        </span>\n      }\n    }\n\n    let mapPreview = this.props.data.map ? <button className=\"link\" onClick={(e) => this.props.open('image', 'Location', this.props.data.id, 'map')}><img src={this.props.data.map} className=\"map-preview\"/></button> : '';\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-globe-americas\"></i> Location</span>\n        </div>\n        <div className=\"card-body\">\n          <ContentEditable\n            tag=\"span\"\n            onBlur={this.updateData}\n            name=\"type\"\n            content={this.props.data.type || ''}\n            placeholder=\"Type\"\n            className={[\"card-minor\"]}\n          />\n          {parentLocation}\n          <ContentEditable\n            tag=\"h2\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            className={[\"card-title\"]}\n          />\n          {mapPreview}\n          <div>\n            <button className=\"link\" onClick={this.changeMap}>\n              <i className=\"fas fa-map\"></i> Map\n            </button>\n            <ContentEditable\n              tag=\"p\"\n              onBlur={this.updateData}\n              name=\"map\"\n              content={this.props.data.map || ''}\n              placeholder=\"Image URL\"\n              className={[\"single-line\", !this.state.mapInput ? 'hidden' : '']}\n            />\n          </div>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"description\"\n            content={this.props.data.description || ''}\n            placeholder=\"Description\"\n          />\n          <LocationList\n            locations={this.props.allData['locations']}\n            showCard={this.props.showCard}\n            parentId={this.props.data.id}\n            parentType=\"Location\"\n          />\n          <CharacterList\n            characters={this.props.allData['characters']}\n            showCard={this.props.showCard}\n            parentId={this.props.data.id}\n            parentType=\"Location\"\n          />\n          <InteractionList\n            parentId={this.props.data.id}\n            parentType={this.componentName}\n            updateData={this.props.updateData}\n            deleteData={this.props.deleteData}\n            addData={this.props.addData}\n            allData={this.props.allData}\n            addEvent={this.props.addEvent}\n          />\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['add-location', 'add-character', 'add-encounter', 'event-location-arrive', 'delete'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Location;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport InteractionList from \"components/InteractionList\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass Character extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Character';\n  }\n\n  render() {\n\n    const location = this.props.getData('Location', this.props.data.parentId);\n    let parentLocation = '';\n    if (location) {\n      parentLocation = <span class=\"card-minor\" style={{float: 'right'}}>\n        <i className=\"fas fa-globe-americas\"></i>\n        &nbsp;\n        <button\n          className=\"link\"\n          onClick={() => this.props.showCard('Location', location.id)}>\n            {location.name}\n        </button>\n      </span>\n    }\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-user-alt\"></i> Character</span>\n        </div>\n        <div className=\"card-body\">\n\n          <ContentEditable\n            tag=\"span\"\n            onBlur={this.updateData}\n            name=\"role\"\n            content={this.props.data.role || ''}\n            placeholder=\"Job/role\"\n            className={[\"card-minor\"]}\n          />\n          {parentLocation}\n          <ContentEditable\n            tag=\"h2\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            className={[\"card-title\"]}\n          />\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"description\"\n            content={this.props.data.description || ''}\n            placeholder=\"Description\"\n          />\n          <h3>Motivations</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"motivations\"\n            content={this.props.data.motivations || ''}\n            placeholder=\"none\"\n          />\n          <h3>Weaknesses</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"weaknesses\"\n            content={this.props.data.weaknesses || ''}\n            placeholder=\"none\"\n          />\n          <InteractionList\n            parentId={this.props.data.id}\n            parentType={this.componentName}\n            updateData={this.props.updateData}\n            deleteData={this.props.deleteData}\n            addData={this.props.addData}\n            allData={this.props.allData}\n            addEvent={this.props.addEvent}\n          />\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['delete'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Character;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass Quest extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Quest';\n  }\n\n  render() {\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-scroll\"></i> Quest</span>\n        </div>\n        <div className=\"card-body\">\n          <ContentEditable\n            tag=\"h2\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            className={[\"card-title\"]}\n          />\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"description\"\n            content={this.props.data.description || ''}\n            placeholder=\"Description\"\n          />\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar()}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Quest;\n","import React from \"react\";\n\nclass MonsterList extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {selectedMonsters: this.props.selectedMonsters || []};\n    this.updateData = this.updateData.bind(this);\n  }\n\n  getMonsterList = (selectedId, delta, count) => {\n    return <div>\n      <select onChange={(e) => {this.updateData(delta, e.target.value)}} value={selectedId}>\n        {this.props.monsterList.map((monster) => {\n          return <option value={monster.id}>{monster.name}</option>\n        })}\n      </select> x&nbsp;\n      <input type=\"number\" className=\"monster-count\" value={count} onChange={(e) => {this.updateData(delta, null, e.target.value)}}/>\n      &nbsp;\n      <button className=\"link\" onClick={(e) => {this.deleteMonster(delta)}}>\n        <i className=\"fas fa-times\"></i>\n      </button>\n    </div>\n  }\n\n  updateData = (deltaId, monsterId, count) => {\n    let selectedMonsters = this.state.selectedMonsters.map((monster, delta) => {\n      if (deltaId === delta) {\n        return {\n          id: monsterId || monster.id,\n          count: count || monster.count\n        }\n      }\n      return monster;\n    });\n    this.setState({selectedMonsters: selectedMonsters});\n    this.props.updateData(this.props.parentId, 'Encounter', 'monsters', selectedMonsters);\n  };\n\n  addMonster = () => {\n    const selectedMonsters = this.state.selectedMonsters.concat({id:1,count:1});\n    this.setState({selectedMonsters:selectedMonsters})\n    this.props.updateData(this.props.parentId, 'Encounter', 'monsters', selectedMonsters);\n  }\n\n  deleteMonster = (delta) => {\n    const selectedMonsters = this.state.selectedMonsters.reduce(( acc, monster, index ) => {\n      if (index !== delta) {\n        acc.push(monster);\n      }\n      return acc;\n    },[]);\n    this.setState({selectedMonsters: selectedMonsters});\n    this.props.updateData(this.props.parentId, 'Encounter', 'monsters', selectedMonsters);\n  }\n\n  render() {\n\n    let selectedMonsters = this.props.selectedMonsters ? this.props.selectedMonsters.map((monster, delta) => {\n      return this.getMonsterList(monster.id, delta, monster.count);\n    }) : [];\n\n    // If some locations are found, show them.\n    return (\n      <div>\n        <h3>Monsters\n          <button className=\"link\" onClick={this.addMonster}>\n            <i className=\"fas fa-spider\"></i>\n          </button>\n        </h3>\n        {selectedMonsters}\n      </div>\n    );\n  }\n}\n\nexport default MonsterList;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport MonsterList from \"components/MonsterList\";\nimport ContentEditable from \"components/ContentEditable\";\nimport ImageUploader from 'react-images-upload';\n\nclass Encounter extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Encounter';\n    this.state = {mapInput: false};\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  changeMap = () => {\n    this.setState({mapInput: !this.state.mapInput});\n  }\n\n  // Takes a data URI and returns the Data URI corresponding to the resized image at the wanted size.\n  onDrop = (picture, pictureDataURLs) => {\n    const datas = pictureDataURLs[0];\n    let wantedWidth = 200;\n    let wantedHeight = 200;\n\n    // We create an image to receive the Data URI\n    var img = document.createElement('img');\n\n    const id = this.props.data.id;\n    const updateData = this.updateData;\n\n    // When the event \"onload\" is triggered we can resize the image.\n    img.onload = function() {\n      if (img.width > img.height) {\n        wantedHeight = wantedHeight * (img.height / img.width);\n      } else {\n        wantedWidth = wantedWidth * (img.width / img.height);\n      }\n\n      // We create a canvas and get its context.\n      var canvas = document.createElement('canvas');\n      var ctx = canvas.getContext('2d');\n\n      // We set the dimensions at the wanted size.\n      canvas.width = wantedWidth;\n      canvas.height = wantedHeight;\n\n      // We resize the image with the canvas method drawImage();\n      ctx.drawImage(this, 0, 0, wantedWidth, wantedHeight);\n\n      updateData(id, 'map', canvas.toDataURL('image/jpeg', 60));\n    };\n\n    // We put the Data URI in the image's src attribute\n    img.src = datas;\n  }\n\n  render() {\n    let mapPreview = this.props.data.map ? <button className=\"link\" onClick={(e) => this.props.open('image', 'Encounter', this.props.data.id, 'map')}><img src={this.props.data.map} className=\"map-preview\"/></button> : '';\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-skull-crossbones\"></i> Encounter</span>\n        </div>\n        <div className=\"card-body\">\n          <ContentEditable\n            tag=\"h2\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            className={[\"card-title\"]}\n          />\n          {mapPreview}\n          <div>\n            <button className=\"link\" onClick={this.changeMap}>\n              <i className=\"fas fa-map\"></i> Map\n            </button>\n            <span className={!this.state.mapInput ? 'hidden' : ''}>\n              <ImageUploader\n                withIcon={true}\n                buttonText='Choose images'\n                onChange={this.onDrop}\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                maxFileSize={524288000}\n                singleImage={true}\n                withLabel={false}\n                withIcon={false}\n              />\n            </span>\n          </div>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"description\"\n            content={this.props.data.description || ''}\n            placeholder=\"Description\"\n          />\n          <MonsterList\n            parentId={this.props.data.id}\n            parentType={this.componentName}\n            updateData={this.props.updateData}\n            addData={this.props.addData}\n            allData={this.props.allData}\n            selectedMonsters={this.props.data.monsters}\n            monsterList={this.props.staticData['monsters']}\n          />\n          Difficulty:\n          <select defaultValue={this.props.data.difficulty} onChange={(e) => this.updateData(null, 'difficulty', e.target.value)}>\n            <option>Easy</option>\n            <option>Medium</option>\n            <option>Hard</option>\n            <option>Deadly</option>\n          </select>\n          <h3>Tactics</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"tactics\"\n            content={this.props.data.tactics || ''}\n            placeholder=\"none\"\n          />\n          <h3>Environmental</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"environmental\"\n            content={this.props.data.environmental || ''}\n            placeholder=\"none\"\n          />\n          <h3>Treasure</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"treasure\"\n            content={this.props.data.treasure || ''}\n            placeholder=\"none\"\n          />\n          <h3>Outcome</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateDataLogEvent}\n            name=\"outcome\"\n            content={this.props.data.outcome || ''}\n            placeholder=\"none\"\n          />\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['encounter-map', 'encounter-tracker', 'delete'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Encounter;\n","import React from \"react\";\nimport Card from \"components/Card\";\n\nclass Search extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Search';\n    this.state = {\n      search: ''\n    }\n  }\n\n  search = (e) => {\n    this.setState({search: e.target.value});\n  }\n\n  render() {\n    let filtered = [];\n    const dataStoreTypes = this.props.getDataStoreTypes();\n    for (let key in dataStoreTypes) {\n      if (!['Interaction', 'PlayerStat', 'Timeline'].includes(dataStoreTypes[key].component)) {\n        if (this.props.allData[dataStoreTypes[key].store]) {\n          filtered.push(this.props.allData[dataStoreTypes[key].store].reduce((accumulator, item, delta) => {\n            if (item.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n              accumulator.push(<li key={delta}>\n                <span className=\"fa-li\"><i className={[dataStoreTypes[key].icon, 'fa'].join(' ')}></i></span>\n                <span className=\"card-minor-minor\">{item.type || item.role}</span>\n                <button\n                  className=\"link\"\n                  onClick={() => this.props.showCard(dataStoreTypes[key].component, item.id)}>\n                    {item.name}\n                </button>\n              </li>);\n            }\n            return accumulator;\n          }, []));\n        }\n      }\n    }\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-search\"></i> Search</span>\n        </div>\n\n        <div className=\"card-top\">\n            <input type=\"text\" onChange={this.search} placeholder=\"Search\"/>\n          </div>\n        <div className=\"card-body card-body--with-top\">\n\n          <ul className=\"fa-ul search-results\">\n            {filtered}\n          </ul>\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass PlayerStat extends React.PureComponent {\n\n  updateData = (id, name, value) => {\n    this.props.updateData(this.props.data.id, 'PlayerStat', name, value);\n  }\n\n  render() {\n\n    return (\n      <tr>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"class\"\n            content={this.props.data.class || ''}\n            placeholder=\"Class\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"pp\"\n            content={this.props.data.pp || ''}\n            placeholder=\"PP\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"ac\"\n            content={this.props.data.ac || ''}\n            placeholder=\"AC\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"proficiencies\"\n            content={this.props.data.proficiencies || ''}\n            placeholder=\"Proficiencies\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"languages\"\n            content={this.props.data.languages || ''}\n            placeholder=\"Languages\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <button className=\"link\" onClick={(e) => {this.props.deleteData('PlayerStat', this.props.data.id)}}>\n            <i className=\"fas fa-times\"></i>\n          </button>\n        </td>\n      </tr>\n    );\n\n  }\n}\n\nexport default PlayerStat;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport PlayerStat from 'components/PlayerStat';\n\nclass PlayerStats extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'PlayerStats';\n  }\n\n  render() {\n\n    const data = this.props.allData['playerStats'];\n    let playerStats = data.map((player, delta) => {\n      return <PlayerStat data={player} updateData={this.props.updateData} deleteData={this.props.deleteData}/>\n    });\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\">\n            <i className=\"fas fa-user-alt\"></i> Player stats\n          </span>\n        </div>\n        <div className=\"card-body\">\n          <table className=\"playerStats\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Class</th>\n                <th>PP</th>\n                <th>AC</th>\n                <th>Proficiencies</th>\n                <th>Languages</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>{playerStats}</tbody>\n          </table>\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['add-player-stat'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default PlayerStats;\n","import React from \"react\";\n\nclass Toolbar extends React.PureComponent {\n\n  exportData = () => {\n    var text = 'Some data I want to export';\n    var data = new Blob([text], {type: 'text/plain'});\n    var url = window.URL.createObjectURL(data);\n    document.getElementById('export_data').href = url;\n  }\n\n  render() {\n\n    return <section className=\"toolbar\">\n      <span className=\"title\"><i className=\"fas fa-fw fa-toolbox\"></i></span>\n      <button className=\"icon\" onClick={() => this.props.showCard('Search')}><i className=\"fas fa-fw fa-search\"></i></button>\n      <button className=\"icon\" onClick={() => this.props.newCard('Location', null)}><i className=\"fas fa-fw fa-globe-americas\"></i></button>\n      <button className=\"icon\" onClick={() => this.props.newCard('Character', null)}><i className=\"fas fa-fw fa-user-alt\"></i></button>\n      <button className=\"icon\" onClick={() => this.props.newCard('Quest', null)}><i className=\"fas fa-fw fa-scroll\"></i></button>\n      <button className=\"icon\" onClick={() => this.props.newCard('Encounter', null)}><i className=\"fas fa-fw fa-skull-crossbones\"></i></button>\n      <button className=\"icon\" onClick={() => this.props.showCard('PlayerStats', null)}><i className=\"fas fa-fw fa-users\"></i></button>\n      <button className=\"icon\" onClick={() => this.props.showCard('Timeline', null)}><i className=\"fas fa-fw fa-clock\"></i></button>\n      <a id=\"export_data\" href=\"\" download onClick={this.exportData}>Export</a>\n    </section>;\n  }\n}\n\nexport default Toolbar;","import React from \"react\";\nimport Card from \"components/Card\";\n\nconst YEAR = 518400;\nconst MONTH = 43200;\nconst DAY = 1440;\nconst HOUR = 60;\n\nclass Timeline extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Timeline';\n    this.state = {\n      datetime: this.props.getConfig('datetime')['datetime'],\n      timeUp: true\n    };\n    this.monthNames = ['','Hammer','Alturiak','Ches','Tarsakh','Mirtul','Kythorn','Flamerule','Eleasis','Eleint','Marpenoth','Uktar','Nightal'];\n  }\n\n  adjustTime = (amount) => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    if (this.state.timeUp) {\n      let min = parseInt(stateCopy.datetime.minute) + amount;\n      while (true) {\n        if (min > 59) {\n          stateCopy.datetime.hour++;\n          if (stateCopy.datetime.hour > 23) {\n            stateCopy.datetime.day++;\n            stateCopy.datetime.hour = 0;\n            if (stateCopy.datetime.day > 30) {\n              stateCopy.datetime.month++;\n              stateCopy.datetime.day = 1;\n              if (stateCopy.datetime.month > 12) {\n                stateCopy.datetime.year++;\n                stateCopy.datetime.month = 1;\n              }\n            }\n          }\n          min = min - 60;\n        } else {\n          break;\n        }\n      }\n      stateCopy.datetime.minute = parseInt(min);\n    } else {\n      let min = parseInt(stateCopy.datetime.minute) - amount;\n      while (true) {\n        if (min < 0) {\n          stateCopy.datetime.hour--;\n          if (stateCopy.datetime.hour < 0) {\n            stateCopy.datetime.day--;\n            stateCopy.datetime.hour = 23;\n            if (stateCopy.datetime.day < 1) {\n              stateCopy.datetime.month--;\n              stateCopy.datetime.day = 30;\n              if (stateCopy.datetime.month < 1) {\n                stateCopy.datetime.year--;\n                stateCopy.datetime.month = 12;\n              }\n            }\n          }\n          min = min + 60;\n        } else {\n          break;\n        }\n      }\n      stateCopy.datetime.minute = parseInt(min);\n    }\n\n    this.setState(stateCopy);\n    this.props.updateConfig('datetime', stateCopy.datetime);\n  }\n\n  formatTime = (datetime) => {\n    if (datetime) {\n      const hour = datetime.hour === 0 ? 12 : datetime.hour > 12 ? datetime.hour - 12 : datetime.hour;\n      const min = datetime.minute < 10 ? '0' + datetime.minute  : datetime.minute;\n      const ampm = datetime.hour < 12 || datetime.hour === 24 ? 'AM' : 'PM';\n      return hour + ':' + min + ' ' + ampm;\n    }\n    return '';\n  }\n\n  formatDate = (datetime) => {\n    return datetime.day + ' ' + this.monthNames[datetime.month] + '(' + datetime.month + ') ' + datetime.year;\n  }\n\n  formatShortDate = (datetime) => {\n    return datetime.day + ' ' + this.monthNames[datetime.month];\n  }\n\n  timeBetween = (start, end) => {\n    if (start && end) {\n      let diff = this.datetimeToEpoc(start) - this.datetimeToEpoc(end);\n      if (diff === 0) {\n        return 'Now';\n      }\n      let niceText = [];\n      let years = 0;\n      let months = 0;\n      let days = 0;\n      let hours = 0;\n      let minutes = 0;\n      while(true) {\n        if (diff < YEAR) {\n          break;\n        }\n        diff -= YEAR;\n        years++;\n      }\n      while(true) {\n        if (diff < MONTH) {\n          break;\n        }\n        diff -= MONTH;\n        months++;\n      }\n      while(true) {\n        if (diff < DAY) {\n          break;\n        }\n        diff -= DAY;\n        days++;\n      }\n      while(true) {\n        if (diff < HOUR) {\n          break;\n        }\n        diff -= HOUR;\n        hours++;\n      }\n      minutes = diff;\n\n      if (years) {\n        niceText.push(years + ' year' + (years > 1 ? 's' : ''));\n      }\n      if (months) {\n        niceText.push(months + ' month' + (months > 1 ? 's' : ''));\n      }\n      if (days) {\n        niceText.push(days + ' day' + (days > 1 ? 's' : ''));\n      }\n      if (hours) {\n        niceText.push(hours + ' hour' + (hours > 1 ? 's' : ''));\n      }\n      if (minutes) {\n        niceText.push(minutes + ' minute' + (minutes > 1 ? 's' : ''));\n      }\n      return niceText.join(' ');\n    } else {\n      return 'Unknown';\n    }\n  }\n\n  datetimeToEpoc = (datetime) => {\n    let mins = 0;\n    mins += datetime.minute;\n    mins += datetime.hour * HOUR;\n    mins += datetime.day * DAY;\n    mins += datetime.month * MONTH;\n    mins += datetime.year * YEAR;\n    return mins;\n  }\n\n  timeUp = (timeUp) => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.timeUp = timeUp;\n    this.setState(stateCopy);\n  }\n\n  newestToOldest = (first, second) => {\n    const diff = this.datetimeToEpoc(second.datetime) - this.datetimeToEpoc(first.datetime);\n    if (diff === 0) {\n      return second.id - first.id;\n    }\n    return diff;\n  }\n\n  deleteEvent = (id) => {\n    this.props.deleteData('Timeline', id);\n  }\n\n  render() {\n    let timeline = [];\n\n    let events = this.props.allData['events'];\n    // Order events by date, newest to oldest.\n    events.sort(this.newestToOldest);\n\n    timeline = events.map((event, index) => {\n      let nextEvent = events[index-1];\n      let icon, title, summary;\n      switch(event.parentType) {\n        case 'Long rest':\n        case 'Short rest':\n          icon = 'fa-campground';\n          title = event.parentType;\n          break;\n        case 'Travel':\n          icon = 'fa-route';\n          title = event.parentType;\n          break;\n        default:\n          const eventParent = this.props.getData(event.parentType, event.parentId);\n          const dataStore = this.props.getDataStore(event.parentType);\n          icon = dataStore.icon;\n          title = eventParent.name;\n          switch (event.parentType) {\n            case 'Encounter':\n              title += ' - ' + eventParent.difficulty;\n              summary = eventParent.outcome;\n              break;\n            case 'Interaction':\n                const interactionParent = this.props.getData(eventParent.parentType, eventParent.parentId);\n                title = interactionParent.name;\n                summary = eventParent.name;\n                break;\n          }\n          break;\n      }\n\n      let timeBetween = this.timeBetween( nextEvent ? nextEvent.datetime : this.state.datetime, event.datetime);\n      if (nextEvent && timeBetween === 'Now') {\n        timeBetween = '';\n      } else {\n        timeBetween = '(' + timeBetween + ')';\n      }\n\n      let dayBreak = '';\n      if (nextEvent && nextEvent.datetime.day !== event.datetime.day) {\n        dayBreak = <li class=\"timeline__daybreak\">{this.formatShortDate(event.datetime)}</li>\n      }\n\n      return (\n        <>\n          {dayBreak}\n          <li>\n            <span className=\"fa-li\"><i className={\"fas \" + icon}></i></span>\n            <div className=\"timeline__event\">\n              <span className=\"card-minor-minor\">{this.formatTime(event.datetime)} {timeBetween}</span>\n              <span className=\"timeline__event-title\">{title}</span>\n              <span className=\"timeline__event-summary\">{summary}</span>\n            </div>\n            <button style={{position: 'absolute', right: 0, top: 0}} className=\"link\" onClick={(e) => {this.deleteEvent(event.id)}}>\n              <i className=\"fas fa-times\"></i>\n            </button>\n          </li>\n        </>\n      );\n    });\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-clock\"></i> Timeline</span>\n        </div>\n        <div className=\"card-top\">\n          <div className=\"date\">\n            <span className=\"date__time\"><i className=\"fas fa-clock\"></i> {this.formatTime(this.state.datetime)}</span>\n            <span className=\"date__date\"><i className=\"fas fa-calendar-alt\"></i> {this.formatDate(this.state.datetime)}</span>\n          </div>\n          <div>\n            <button className=\"icon\" onClick={()=>this.adjustTime(15)}>15m</button>\n            <button className=\"icon\" onClick={()=>this.adjustTime(HOUR)}>1h</button>\n            <button className=\"icon\" onClick={()=>this.adjustTime(HOUR * 8)}>8h</button>\n            <button className=\"icon\" onClick={()=>this.adjustTime(DAY)}>1d</button>\n            <button className=\"icon\" onClick={()=>this.adjustTime(MONTH)}>1mon</button>\n            <button className=\"icon\" onClick={()=>this.adjustTime(YEAR)}>1year</button>\n            <button\n              className={\"icon time-switch\" + (this.state.timeUp ? ' active' : '')}\n              onClick={() => this.timeUp(true)}\n            >\n              +\n            </button>\n            <button\n              className={\"icon time-switch\" + (this.state.timeUp ? ' ' : ' active')}\n              onClick={() => this.timeUp(false)}\n            >\n              -\n            </button>\n          </div>\n        </div>\n        <div className=\"card-body card-body--timeline\">\n          <div className=\"timeline__line\"></div>\n          <ul className='fa-ul timeline'>\n            {timeline}\n          </ul>\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['event-rest-long', 'event-rest-short', 'event-travel'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Timeline;\n","import React from \"react\";\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\nimport Location from 'components/Location';\nimport Character from 'components/Character';\nimport Quest from 'components/Quest';\nimport Encounter from 'components/Encounter';\nimport Search from 'components/Search';\nimport PlayerStats from 'components/PlayerStats';\nimport Toolbar from \"components/Toolbar\";\nimport Timeline from \"components/Timeline\";\nimport _ from \"lodash\";\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\nconst dataComponents = {\n  Location: Location,\n  Character: Character,\n  Quest: Quest,\n  Encounter: Encounter\n};\nconst toolboxComponents = {\n  Search: Search,\n  PlayerStats: PlayerStats,\n  Timeline: Timeline\n}\n\nclass Grid extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const layout = JSON.parse(localStorage.getItem('gm-tools-layout')) || {\n      layout: [],\n      keyCounter: 2\n    };\n    this.state = {\n      layout: layout\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      className: \"layout\",\n      cols: { lg: 8, md: 10, sm: 6, xs: 4, xxs: 2 },\n      rowHeight: 100,\n      draggableHandle: \".card-header\"\n    };\n  }\n\n  createCard = el => {\n    let Component = dataComponents[el.component.type];\n    if (Component !== undefined) {\n      const data = this.props.getData(el.component.type, el.component.id);\n      const allData = this.props.getAllData();\n      const staticData = this.props.getStaticData();\n      return (\n        <div key={el.grid.i} data-grid={el.grid}>\n          <Component\n            data={data}\n            allData={allData}\n            staticData={staticData}\n            showCard={this.showCard}\n            newCard={this.newCard}\n            deleteCard={this.deleteCard}\n            updateData={this.props.updateData}\n            getAllDataByType={this.props.getAllDataByType}\n            getData={this.props.getData}\n            addData={this.props.addData}\n            deleteData={this.props.deleteData}\n            open={this.props.open}\n            addEvent={this.props.addEvent}\n          />\n          <span className=\"card-close\" onClick={(e) => this.closeCard(el.grid.i)}><i className=\"fas fa-times\"></i></span>\n        </div>\n      );\n    }\n\n    Component = toolboxComponents[el.component.type];\n    if (Component !== undefined) {\n      const allData = this.props.getAllData();\n      return (\n        <div key={el.grid.i} data-grid={el.grid}>\n          <Component\n            allData={allData}\n            showCard={this.showCard}\n            getData={this.props.getData}\n            getDataStoreTypes={this.props.getDataStoreTypes}\n            getDataStore={this.props.getDataStore}\n            updateData={this.props.updateData}\n            deleteData={this.props.deleteData}\n            addData={this.props.addData}\n            getConfig={this.props.getConfig}\n            updateConfig={this.props.updateConfig}\n            addEvent={this.props.addEvent}\n          />\n          <span className=\"card-close\" onClick={(e) => this.closeCard(el.grid.i)}><i className=\"fas fa-times\"></i></span>\n        </div>\n      );\n    }\n  }\n\n  showCard = (type, id) => {\n    let Component = dataComponents[type];\n    if (Component !== undefined) {\n      this.setState({\n        layout: {\n          layout: this.state.layout.layout.concat({\n            grid: {\n              i: 'n' + this.state.layout.keyCounter,\n              x: 0,\n              y: 0,\n              w: 2,\n              h: 4,\n            },\n            component: {id:id, type:type}\n          }),\n          keyCounter: this.state.layout.keyCounter + 1\n        }\n      });\n      return;\n    }\n\n    Component = toolboxComponents[type];\n    if (Component !== undefined) {\n      this.setState({\n        layout: {\n          layout: this.state.layout.layout.concat({\n            grid: {\n              i: 'n' + this.state.layout.keyCounter,\n              x: 0,\n              y: 0,\n              w: 2,\n              h: 4,\n            },\n            component: {type:type}\n          }),\n          keyCounter: this.state.layout.keyCounter + 1\n        }\n      });\n      return;\n    }\n\n  }\n\n  newCard = (type, parentId, parentType) => {\n    let showCard = this.showCard;\n    this.props.addData(type, parentId, parentType, {}, (id) => {\n      showCard(type, id);\n    });\n  }\n\n  deleteCard = (type, id) => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.layout.layout = _.reject(stateCopy.layout.layout, function(o) { return o.component.id === id; });\n    this.setState(stateCopy);\n    this.props.deleteData(type, id);\n  }\n\n  closeCard = (i) => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.layout.layout = _.reject(stateCopy.layout.layout, function(o) { return o.grid.i === i; });\n    this.setState(stateCopy);\n  }\n\n  onLayoutChange = layout => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    for (let i in layout) {\n      stateCopy.layout.layout[i].grid = {...stateCopy.layout.layout[i].grid, ...layout[i]};\n    }\n    this.setState(stateCopy);\n    localStorage.setItem(\"gm-tools-layout\", JSON.stringify(stateCopy.layout));\n  }\n\n  render() {\n    if (!this.state.layout.layout.length) {\n      document.body.classList.add('empty');\n    } else {\n      document.body.classList.remove('empty');\n    }\n    return (\n      <div className=\"frame\">\n        <div className=\"start\">\n          <i className=\"fas fa-plus\"></i>\n          <div>Add a card using the toolbar</div>\n        </div>\n        <div className=\"grid\">\n          <ResponsiveReactGridLayout\n              {...this.props}\n              onLayoutChange={this.onLayoutChange}\n            >\n              {_.map(this.state.layout.layout, el => this.createCard(el))}\n          </ResponsiveReactGridLayout>\n        </div>\n        <Toolbar\n          newCard={this.newCard}\n          showCard={this.showCard}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Grid;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport ImageUploader from 'react-images-upload';\n\nlet drag = false;\n\nclass EncounterMap extends React.Component {\n\n  constructor(props) {\n    super(props);\n    let data = this.props.getData('Encounter', this.props.id);\n    if (!data.grid) {\n      data.grid = {gridSize: 125, mapWidth: 2000, clearFog: false, fog: []};\n    }\n    this.state = {data: data, map: ''};\n    this.revealToggle = true;\n    document.body.classList.add('encounter-map');\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  componentDidMount() {\n    document.getElementById('encounter-grid').addEventListener('mousedown', () => drag = true);\n    document.addEventListener('mouseup', () => {drag = false; this.saveFog(this)});\n\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.grid.mapHeight = document.getElementById('encounter-grid').offsetHeight;\n    this.setState(stateCopy);\n    this.drawGrid(stateCopy.data.grid);\n  }\n\n  resetGrid = () => {\n    let mapWidth = parseInt(document.getElementById('mapWidth').value);\n    let gridSize = parseInt(document.getElementById('gridSize').value);\n\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.grid['mapWidth'] = mapWidth;\n    stateCopy.data.grid['mapHeight'] = document.getElementById('encounter-grid').offsetHeight;\n    stateCopy.data.grid['gridSize'] = gridSize;\n    stateCopy.data.grid.fog = [];\n    stateCopy.data.grid.clearFog = false;\n    this.setState(stateCopy);\n    this.drawGrid(stateCopy.data.grid);\n  }\n\n  drawGrid = (grid) => {\n    let size = grid.gridSize;\n    let rows = Math.ceil(grid.mapHeight / size);\n    let cols = Math.ceil(grid.mapWidth / size);\n    let fogs = grid.fog;\n    let clearFog = grid.clearFog;\n\n    function gridData() {\n      var data = [];\n      var xpos = 1;\n      var ypos = 1;\n      var width = size;\n      var height = size;\n\n      // iterate for rows\n\n      for (var row = 0; row < rows; row++) {\n        data.push([]);\n        // iterate for cells/columns inside rows\n        for (var col = 0; col < cols; col++) {\n          let reveal = true;\n          if (!clearFog) {\n            reveal = false;\n            for (const fog of fogs) {\n              if (parseInt(fog.row) === row && parseInt(fog.col) === col) {\n                reveal = true;\n                break;\n              }\n            }\n          }\n          data[row].push({\n            x: xpos,\n            y: ypos,\n            width: width,\n            height: height,\n            row: row,\n            col: col,\n            reveal: reveal\n          })\n          // increment the x position. I.e. move it over by 50 (width variable)\n          xpos += width;\n        }\n        // reset the x position after a row is complete\n        xpos = 1;\n        // increment the y position for the next row. Move it down 50 (height variable)\n        ypos += height;\n      }\n      return data;\n    }\n\n    d3.select(\"#encounter-grid__svg\").selectAll(\"*\").remove();\n\n    var dataGrid = d3.select(\"#encounter-grid__svg\")\n      .attr(\"width\",(cols * size) + \"px\")\n      .attr(\"height\",(rows * size) + \"px\");\n\n    var row = dataGrid.selectAll(\".row\")\n      .data(gridData)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\");\n\n    row.selectAll(\".square\")\n      .data(function(d) { return d; })\n      .enter().append(\"rect\")\n      .attr(\"class\",function(d) { return d.reveal ? 'square reveal' : 'square'; })\n      .attr(\"x\", function(d) { return d.x; })\n      .attr(\"y\", function(d) { return d.y; })\n      .attr(\"data-reveal\", function(d) { return d.reveal })\n      .attr(\"data-row\", function(d) { return d.row; })\n      .attr(\"data-col\", function(d) { return d.col; })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height; })\n      .on('mousedown', function(d) {\n          d3.select(this).attr(\"class\", \"square reveal\").attr('data-reveal', true);\n      })\n      .on('mouseover', function(d) {\n        if (drag) {\n          d3.select(this).attr(\"class\", \"square reveal\").attr('data-reveal', true);\n        }\n      });\n  }\n\n  saveFog = () => {\n    let fog = [];\n    const grid = document.querySelectorAll(\".square[data-reveal=true]\");\n    for (const gridItem of grid) {\n      fog.push({\n        row: gridItem.getAttribute('data-row'),\n        col: gridItem.getAttribute('data-col')\n      });\n    }\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.grid.fog = fog;\n    this.setState(stateCopy);\n    this.props.updateData(this.props.id, 'Encounter', 'grid', stateCopy.data.grid);\n  }\n\n  toggleFog = () => {\n    const grid = document.querySelectorAll(\".square[data-reveal=false]\");\n    for (const gridItem of grid) {\n      if (this.revealToggle) {\n        gridItem.classList.add(\"tempReveal\");\n      } else {\n        gridItem.classList.remove(\"tempReveal\");\n      }\n    }\n    this.revealToggle = !this.revealToggle;\n  }\n\n  clearFog = () => {\n    const grid = document.querySelectorAll(\".square[data-reveal=false]\");\n    for (const gridItem of grid) {\n      gridItem.classList.add(\"reveal\");\n    }\n\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.grid.fog = [];\n    stateCopy.data.grid.clearFog = true;\n    this.setState(stateCopy);\n    this.props.updateData(this.props.id, 'Encounter', 'grid', stateCopy.data.grid);\n  }\n\n  hideToolbar = () => {\n    document.getElementById('encounter-grid__controls').setAttribute('style', 'display: none;');\n  }\n\n  onDrop(picture, pictureDataURLs) {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.map = pictureDataURLs;\n    this.setState(stateCopy);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"encounter-grid__controls\" id='encounter-grid__controls'>\n          <label>Map size</label>\n          <input type=\"number\" defaultValue={this.state.data.grid.mapWidth} id=\"mapWidth\"/>px\n          <label>Grid size</label>\n          <input type=\"number\" defaultValue={this.state.data.grid.gridSize} id=\"gridSize\"/>px\n          <input type=\"submit\" value=\"Reset grid\" onClick={this.resetGrid}/>\n          <input type=\"submit\" value=\"Toggle fog\" onClick={this.toggleFog}/>\n          <input type=\"submit\" value=\"Clear fog\" onClick={this.clearFog}/>\n          <input type=\"submit\" value=\"Hide overflow\" onClick={()=>{document.body.classList.add('encounter-map--hide-overflow')}}/>\n          <input type=\"submit\" value=\"Hide controls\" onClick={this.hideToolbar}/>\n          <ImageUploader\n            withIcon={true}\n            buttonText='Choose images'\n            onChange={this.onDrop}\n            imgExtension={['.jpg', '.gif', '.png', '.gif']}\n            maxFileSize={524288000}\n            singleImage={true}\n            withLabel={false}\n            withIcon={false}\n            buttonText='Load image'\n          />\n        </div>\n        <div\n          id=\"encounter-grid\"\n          className=\"encounter-grid\"\n        >\n          <img src={this.state.map} width={this.state.data.grid.mapWidth + 'px'}/>\n          <svg id=\"encounter-grid__svg\"></svg>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EncounterMap;\n","import React from \"react\";\nimport logo from '../images/dnd-beyond-logo.svg'; // Tell webpack this JS file uses this image\n\nclass EncounterTracker extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {data: this.props.getData('Encounter', this.props.id), monsters: this.props.getStaticData()['monsters'], iframes: []};\n    document.body.classList.add('encounter-tracker');\n  }\n\n  getMonsterData = (id) => {\n    for (const delta in this.state.monsters) {\n      if (parseInt(this.state.monsters[delta].id) === parseInt(id)) {\n        return this.state.monsters[delta];\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.data.monsters.map((monster, index) => {\n          const monsterData = this.getMonsterData(monster.id);\n          return <div>\n            <h2>{monsterData.name} x {monster.count} &nbsp;\n              <a href={monsterData.dndbeyond} target=\"_blank\">\n                <img src={logo} className=\"dndbeyond-logo\"/>\n              </a>\n             </h2>\n            {monster.count} x\n          </div>;\n        })}\n      </div>\n    )\n  }\n}\n\nexport default EncounterTracker;\n","import React from \"react\";\nimport Grid from 'components/Grid';\nimport EncounterMap from 'components/EncounterMap';\nimport EncounterTracker from 'components/EncounterTracker';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { createBrowserHistory } from 'history';\nimport monsters from 'data/monsters.json';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/styles.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: JSON.parse(localStorage.getItem('gm-tools-data')) || {\n        locations: [],\n        characters: [],\n        quests: [],\n        encounters: [],\n        interactions: [],\n        playerStats: [],\n        events: [],\n        nextId: 1\n      },\n      config: JSON.parse(localStorage.getItem('gm-tools-config')) || {\n        datetime: {\n          minute: 0,\n          hour: 0,\n          day: 1,\n          month: 1,\n          year: 1370\n        }\n      }\n    };\n    this.getData = this.getData.bind(this);\n    this.getAllDataByType = this.getAllDataByType.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.getAllData = this.getAllData.bind(this);\n    this.addData = this.addData.bind(this);\n    this.deleteData = this.deleteData.bind(this);\n    this.open = this.open.bind(this);\n    this.getDataStoreTypes = this.getDataStoreTypes.bind(this);\n    this.updateConfig = this.updateConfig.bind(this);\n    this.addEvent = this.addEvent.bind(this);\n    this.getDataStore = this.getDataStore.bind(this);\n  }\n\n  getDataStore = (type) => {\n    const stores = this.getDataStoreTypes();\n    for (let store in stores) {\n      if (stores[store].component === type) {\n        return stores[store];\n      }\n    }\n    return null;\n  }\n\n  getDataStoreTypes = () => {\n    return [\n      {component: 'Location', store: 'locations', icon: 'fa-globe-americas'},\n      {component: 'Character', store: 'characters', icon: 'fa-user-alt'},\n      {component: 'Quest', store: 'quests', icon: 'fa-scroll'},\n      {component: 'Encounter', store: 'encounters', icon: 'fa-skull-crossbones'},\n      {component: 'Interaction', store: 'interactions', icon: 'fa-people-arrows'},\n      {component: 'PlayerStat', store: 'playerStats', icon: 'fa-users'},\n      {component: 'Timeline', store: 'events', icon: 'fa-clock'},\n    ];\n  }\n\n  getAllData = () => {\n    return this.state.data;\n  }\n\n  getConfig = () => {\n    return this.state.config;\n  }\n\n  getData = (type, id) => {\n    id = parseInt(id);\n    let dataStore = this.getDataStore(type);\n    if (dataStore) {\n      for (const delta in this.state.data[dataStore.store]) {\n        if (this.state.data[dataStore.store][delta].id === id) {\n          return this.state.data[dataStore.store][delta];\n        }\n      }\n    }\n  }\n\n  getStaticData = () => {\n    return {\"monsters\": monsters};\n  }\n\n  getAllDataByType = (type) => {\n    let dataStore = this.getDataStore(type).store;\n    return this.state.data[dataStore];\n  }\n\n  updateData = (id, type, name, value) => {\n    this.setState((state, props) => {\n      id = parseInt(id);\n      let dataStore = this.getDataStore(type).store;\n      for (let delta in state.data[dataStore]) {\n        if (state.data[dataStore][delta].id === id) {\n          let stateCopy = JSON.parse(JSON.stringify(state));\n          stateCopy.data[dataStore][delta][name] = value;\n          localStorage.setItem(\"gm-tools-data\", JSON.stringify(stateCopy.data));\n          return stateCopy;\n        }\n      }\n    });\n  }\n\n  deleteData = (type, id) => {\n    this.setState((state, props) => {\n      let dataStore = this.getDataStore(type).store;\n      let stateCopy = JSON.parse(JSON.stringify(state));\n      stateCopy.data[dataStore] = _.reject(stateCopy.data[dataStore], function(o) { return o.id === id; });\n      localStorage.setItem(\"gm-tools-data\", JSON.stringify(stateCopy.data));\n      return stateCopy;\n    });\n  }\n\n  addData = (type, parentId, parentType, data, callback) => {\n    this.setState((state, props) => {\n      let dataStore = this.getDataStore(type).store;\n      let stateCopy = JSON.parse(JSON.stringify(state));\n      stateCopy.data.nextId++;\n      const dataInit = {\n        id: stateCopy.data.nextId,\n        parentId: parentId ? parentId : null,\n        parentType: parentType ? parentType : null,\n        name: 'New ' + type\n      };\n      const dataMerged = {...dataInit, ...data};\n      stateCopy.data[dataStore].push(dataMerged);\n      localStorage.setItem(\"gm-tools-data\", JSON.stringify(stateCopy.data));\n      if (callback) {\n        callback(stateCopy.data.nextId);\n      }\n      return stateCopy;\n    });\n  }\n\n  open = (style, type, id, field) => {\n    if (style === 'image') {\n      const imageData = this.getData(type, id);\n      if (imageData) {\n        let w = window.open('about:blank');\n        let image = new Image();\n        image.src = imageData[field];\n        image.style = \"width: 100%\";\n        setTimeout(function(){\n          w.document.write(image.outerHTML);\n        }, 0);\n      }\n    }\n  }\n\n  updateConfig = (name, value) => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.config[name] = value;\n    this.setState(stateCopy);\n    localStorage.setItem(\"gm-tools-config\", JSON.stringify(stateCopy.config));\n  }\n\n  addEvent = (parentId, parentType) => {\n    this.addData('Timeline', parentId, parentType, {datetime: this.state.config.datetime});\n  }\n\n  render() {\n    return (\n      <main>\n        <Router>\n          <Switch>\n            <Route path=\"/encounter-map/:id\" children={<EncounterMapRoute getData={this.getData} updateData={this.updateData}/>}/>\n            <Route path=\"/encounter-tracker/:id\" children={<EncounterTrackerRoute getData={this.getData} updateData={this.updateData} getStaticData={this.getStaticData}/>}/>\n            <Route path=\"/\">\n              <Grid\n                getData={this.getData}\n                getAllDataByType={this.getAllDataByType}\n                updateData={this.updateData}\n                getAllData={this.getAllData}\n                getStaticData={this.getStaticData}\n                addData={this.addData}\n                deleteData={this.deleteData}\n                getDataStoreTypes={this.getDataStoreTypes}\n                getDataStore={this.getDataStore}\n                open={this.open}\n                getConfig={this.getConfig}\n                updateConfig={this.updateConfig}\n                addEvent={this.addEvent}\n              />\n            </Route>\n          </Switch>\n        </Router>\n      </main>\n    );\n\n  }\n}\n\nfunction EncounterMapRoute(props) {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    <EncounterMap\n      getData={props.getData}\n      updateData={props.updateData}\n      id={id}\n    />\n  );\n}\n\nfunction EncounterTrackerRoute(props) {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    <EncounterTracker\n      getData={props.getData}\n      updateData={props.updateData}\n      getStaticData={props.getStaticData}\n      id={id}\n    />\n  );\n}\n\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/dnd-beyond-logo.5b5a0482.svg\";"],"sourceRoot":""}
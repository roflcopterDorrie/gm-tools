{"version":3,"sources":["components/Card.js","components/ContentEditable.js","components/LocationList.js","components/CharacterList.js","components/Location.js","components/InteractionList.js","components/Character.js","components/Quest.js","components/MonsterList.js","components/Encounter.js","components/Search.js","components/PlayerStat.js","components/PlayerStats.js","components/Toolbar.js","components/Grid.js","components/EncounterMap.js","components/EncounterTracker.js","App.js","serviceWorker.js","index.js"],"names":["Card","updateData","id","name","value","props","data","componentName","toolbar","tools","type","push","onClick","newCard","className","deleteCard","map","window","open","e","addData","React","PureComponent","ContentEditable","onBlur","evt","hasOwnProperty","target","innerText","trim","Element","this","tag","contentEditable","suppressContentEditableWarning","placeholder","join","content","Component","LocationList","filteredLocations","locations","reduce","accumulator","location","delta","parentId","key","showCard","length","CharacterList","filtered","characters","character","parentType","role","Location","changeMap","setState","mapInput","state","getData","parentLocation","class","style","float","mapPreview","src","description","allData","InteractionList","console","log","addInteraction","interaction","Character","motivations","weaknesses","Quest","MonsterList","getMonsterList","selectedId","count","onChange","monsterList","monster","deleteMonster","deltaId","monsterId","selectedMonsters","addMonster","concat","acc","index","bind","Encounter","monsters","staticData","tactics","environmental","Search","search","dataStoreTypes","getDataStoreTypes","component","store","item","toLowerCase","includes","icon","PlayerStat","pp","ac","proficiencies","languages","deleteData","PlayerStats","playerStats","player","Toolbar","ResponsiveReactGridLayout","WidthProvider","Responsive","dataComponents","toolboxComponents","Grid","createCard","el","undefined","getAllData","getStaticData","grid","i","data-grid","getAllDataByType","closeCard","layout","keyCounter","x","y","w","h","stateCopy","JSON","parse","stringify","_","reject","o","onLayoutChange","localStorage","setItem","getItem","cols","lg","md","sm","xs","xxs","rowHeight","draggableHandle","drag","EncounterMap","resetGrid","mapWidth","parseInt","document","getElementById","gridSize","fog","clearFog","drawGrid","size","rows","Math","ceil","mapHeight","fogs","d3","selectAll","remove","attr","xpos","ypos","width","height","row","col","reveal","enter","append","d","on","saveFog","querySelectorAll","gridItem","getAttribute","toggleFog","revealToggle","classList","add","hideToolbar","setAttribute","body","addEventListener","offsetHeight","defaultValue","EncounterTracker","EncounterMapRoute","useParams","EncounterTrackerRoute","App","getDataStore","stores","dataStore","nextId","field","imageData","image","Image","setTimeout","write","outerHTML","quests","interactions","path","children","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.40efb189.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Card extends React.PureComponent {\n\n  updateData = (id, name, value) => {\n    this.props.updateData(this.props.data.id, this.componentName, name, value);\n  };\n\n  toolbar = tools => {\n    let toolbar = [];\n    tools = tools || ['add-location', 'add-character', 'add-encounter', 'delete'];\n    for (let type in tools) {\n      if (tools[type] === 'add-location') {\n        toolbar.push(\n          <button onClick={() => this.props.newCard('Location', this.props.data.id, this.componentName)}><i className=\"fas fa-globe-americas\"></i></button>\n        );\n      } else if (tools[type] === 'add-character') {\n        toolbar.push(\n          <button onClick={() => this.props.newCard('Character', this.props.data.id, this.componentName)}><i className=\"fas fa-user-alt\"></i></button>\n        );\n      } else if (tools[type] === 'add-encounter') {\n        toolbar.push(\n          <button onClick={() => this.props.newCard('Encounter', this.props.data.id, this.componentName)}><i className=\"fas fa-skull-crossbones\"></i></button>\n        );\n      } else if (tools[type] === 'delete') {\n        toolbar.push(\n          <button onClick={() => this.props.deleteCard(this.componentName, this.props.data.id)}><i className=\"fas fa-trash-alt\"></i></button>\n        );\n      } else if (tools[type] === 'encounter-map') {\n        if (this.props.data.map) {\n          toolbar.push(\n            <button onClick={() => window.open('/encounter-map/' + this.props.data.id)}><i className=\"fas fa-map\"></i></button>\n          );\n        }\n      } else if (tools[type] === 'encounter-tracker') {\n        toolbar.push(\n          <button onClick={() => window.open('/encounter-tracker/' + this.props.data.id)}><i className=\"fas fa-skull-crossbones\"></i></button>\n        );\n      } else if (tools[type] === 'add-player-stat') {\n        toolbar.push(\n          <button onClick={(e) => this.props.addData('PlayerStat')}><i className=\"fas fa-plus\"></i></button>\n        );\n      }\n    }\n    return toolbar;\n  };\n\n  render() {\n    return <section></section>;\n  }\n}\n\nexport default Card;","import React from \"react\";\n\nclass ContentEditable extends React.Component {\n\n  onBlur = (evt) => {\n    this.props.onBlur(this.props.hasOwnProperty('id') ? this.props.id : null, this.props.name, evt.target.innerText.trim());\n  };\n\n  render() {\n    const Element = `${this.props.tag}`;\n    return (\n      <Element\n        contentEditable={true}\n        suppressContentEditableWarning={true}\n        onBlur={this.onBlur}\n        placeholder={this.props.placeholder}\n        className={this.props.className ? this.props.className.join(' ') : ''}>\n          {this.props.content||''}\n      </Element>\n    );\n  }\n}\n\nexport default ContentEditable;\n","import React from \"react\";\n\nclass LocationList extends React.PureComponent {\n\n  render() {\n\n    const filteredLocations = this.props.locations.reduce((accumulator, location, delta) => {\n      if (location.parentId === this.props.parentId) {\n        accumulator.push(<li key={delta}>\n          <span className=\"card-minor-minor\">{location.type}</span>\n          <i className=\"fas fa-globe-americas\"></i>&nbsp;\n          <button\n            className=\"link\"\n            onClick={() => this.props.showCard('Location', location.id)}>\n              {location.name}\n          </button>\n        </li>);\n      }\n      return accumulator;\n    }, []);\n\n    // If some locations are found, show them.\n    if (filteredLocations.length) {\n      return (\n        <div>\n          <h3>Locations</h3>\n          <ul className=\"link-list\">\n            {filteredLocations}\n          </ul>\n        </div>\n      );\n    } else {\n      return '';\n    }\n  }\n}\n\nexport default LocationList;\n","import React from \"react\";\n\nclass CharacterList extends React.PureComponent {\n\n  render() {\n\n    const filtered = this.props.characters.reduce((accumulator, character, delta) => {\n      if (character.parentId === this.props.parentId && character.parentType === this.props.parentType) {\n        accumulator.push(<li key={delta}>\n          <span className=\"card-minor-minor\">{character.role}</span>\n          <i className=\"fas fa-user-alt\"></i>&nbsp;\n          <button\n            className=\"link\"\n            onClick={() => this.props.showCard('Character', character.id)}>\n              {character.name}\n          </button>\n        </li>);\n      }\n      return accumulator;\n    }, []);\n\n    // If some locations are found, show them.\n    if (filtered.length) {\n      return (\n        <div>\n          <h3>Characters</h3>\n          <ul className=\"link-list\">\n            {filtered}\n          </ul>\n        </div>\n      );\n    } else {\n      return '';\n    }\n  }\n}\n\nexport default CharacterList;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport ContentEditable from \"components/ContentEditable\";\nimport LocationList from 'components/LocationList.js';\nimport CharacterList from 'components/CharacterList.js';\n\nclass Location extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Location';\n    this.state = {mapInput: false};\n  }\n\n  changeMap = () => {\n    this.setState({mapInput: !this.state.mapInput});\n  }\n\n  render() {\n\n    const location = this.props.getData('Location', this.props.data.parentId);\n    let parentLocation = '';\n    if (location) {\n      parentLocation = <span class=\"card-minor\" style={{float: 'right'}}>\n        <i className=\"fas fa-globe-americas\"></i>\n        &nbsp;\n        <button\n          className=\"link\"\n          onClick={() => this.props.showCard('Location', location.id)}>\n            {location.name}\n        </button>\n      </span>\n    }\n\n    let mapPreview = this.props.data.map ? <button className=\"link\" onClick={(e) => this.props.open('image', 'Location', this.props.data.id, 'map')}><img src={this.props.data.map} className=\"map-preview\"/></button> : '';\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-globe-americas\"></i> Location</span>\n        </div>\n        <div className=\"card-body\">\n          <ContentEditable\n            tag=\"span\"\n            onBlur={this.updateData}\n            name=\"type\"\n            content={this.props.data.type || ''}\n            placeholder=\"Type\"\n            className={[\"card-minor\"]}\n          />\n          {parentLocation}\n          <ContentEditable\n            tag=\"h2\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            className={[\"card-title\"]}\n          />\n          {mapPreview}\n          <div>\n            <button className=\"link\" onClick={this.changeMap}>\n              <i className=\"fas fa-map\"></i> Map\n            </button>\n            <ContentEditable\n              tag=\"p\"\n              onBlur={this.updateData}\n              name=\"map\"\n              content={this.props.data.map || ''}\n              placeholder=\"Image URL\"\n              className={[\"single-line\", !this.state.mapInput ? 'hidden' : '']}\n            />\n          </div>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"description\"\n            content={this.props.data.description || ''}\n            placeholder=\"Description\"\n          />\n          <LocationList\n            locations={this.props.allData['locations']}\n            showCard={this.props.showCard}\n            parentId={this.props.data.id}\n            parentType=\"Location\"\n          />\n          <CharacterList\n            characters={this.props.allData['characters']}\n            showCard={this.props.showCard}\n            parentId={this.props.data.id}\n            parentType=\"Location\"\n          />\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar()}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Location;\n","import React from \"react\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass InteractionList extends React.PureComponent {\n\n  updateData = (id, name, value) => {\n    console.log(id + name + value);\n    this.props.updateData(id, \"Interaction\", name, value);\n  };\n\n  addInteraction = () => {\n    this.props.addData(\"Interaction\", this.props.parentId, this.props.parentType);\n  }\n\n  render() {\n\n    const filtered = this.props.allData['interactions'].reduce((accumulator, interaction, delta) => {\n      if (interaction.parentId === this.props.parentId) {\n        accumulator.push(<ContentEditable\n          tag=\"p\"\n          onBlur={this.updateData}\n          name=\"name\"\n          content={interaction.name || ''}\n          placeholder=\"name\"\n          id={interaction.id}\n        />);\n      }\n      return accumulator;\n    }, []);\n\n    // If some locations are found, show them.\n    return (\n      <div>\n        <h3>Interactions\n          <button className=\"link\" onClick={this.addInteraction}>\n            <i className=\"fas fa-user-plus\"></i>\n          </button>\n        </h3>\n\n        {filtered}\n      </div>\n    );\n  }\n}\n\nexport default InteractionList;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport InteractionList from \"components/InteractionList\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass Character extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Character';\n  }\n\n  render() {\n\n    const location = this.props.getData('Location', this.props.data.parentId);\n    let parentLocation = '';\n    if (location) {\n      parentLocation = <span class=\"card-minor\" style={{float: 'right'}}>\n        <i className=\"fas fa-globe-americas\"></i>\n        &nbsp;\n        <button\n          className=\"link\"\n          onClick={() => this.props.showCard('Location', location.id)}>\n            {location.name}\n        </button>\n      </span>\n    }\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-user-alt\"></i> Character</span>\n        </div>\n        <div className=\"card-body\">\n\n          <ContentEditable\n            tag=\"span\"\n            onBlur={this.updateData}\n            name=\"role\"\n            content={this.props.data.role || ''}\n            placeholder=\"Job/role\"\n            className={[\"card-minor\"]}\n          />\n          {parentLocation}\n          <ContentEditable\n            tag=\"h2\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            className={[\"card-title\"]}\n          />\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"description\"\n            content={this.props.data.description || ''}\n            placeholder=\"Description\"\n          />\n          <h3>Motivations</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"motivations\"\n            content={this.props.data.motivations || ''}\n            placeholder=\"none\"\n          />\n          <h3>Weaknesses</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"weaknesses\"\n            content={this.props.data.weaknesses || ''}\n            placeholder=\"none\"\n          />\n          <InteractionList\n            parentId={this.props.data.id}\n            parentType={this.componentName}\n            updateData={this.props.updateData}\n            addData={this.props.addData}\n            allData={this.props.allData}\n          />\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['delete'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Character;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass Quest extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Quest';\n  }\n\n  render() {\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-scroll\"></i> Quest</span>\n        </div>\n        <div className=\"card-body\">\n          <ContentEditable\n            tag=\"h2\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            className={[\"card-title\"]}\n          />\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"description\"\n            content={this.props.data.description || ''}\n            placeholder=\"Description\"\n          />\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar()}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Quest;\n","import React from \"react\";\n\nclass MonsterList extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {selectedMonsters: this.props.selectedMonsters || []};\n    this.updateData = this.updateData.bind(this);\n  }\n\n  getMonsterList = (selectedId, delta, count) => {\n    return <div>\n      <select onChange={(e) => {this.updateData(delta, e.target.value)}} value={selectedId}>\n        {this.props.monsterList.map((monster) => {\n          return <option value={monster.id}>{monster.name}</option>\n        })}\n      </select> x&nbsp;\n      <input type=\"number\" value={count} onChange={(e) => {this.updateData(delta, null, e.target.value)}}/>\n      &nbsp;\n      <button className=\"link\" onClick={(e) => {this.deleteMonster(delta)}}>\n        <i className=\"fas fa-times\"></i>\n      </button>\n    </div>\n  }\n\n  updateData = (deltaId, monsterId, count) => {\n    let selectedMonsters = this.state.selectedMonsters.map((monster, delta) => {\n      if (deltaId === delta) {\n        return {\n          id: monsterId || monster.id,\n          count: count || monster.count\n        }\n      }\n      return monster;\n    });\n    this.setState({selectedMonsters: selectedMonsters});\n    this.props.updateData(this.props.parentId, 'Encounter', 'monsters', selectedMonsters);\n  };\n\n  addMonster = () => {\n    const selectedMonsters = this.state.selectedMonsters.concat({id:1,count:1});\n    this.setState({selectedMonsters:selectedMonsters})\n    this.props.updateData(this.props.parentId, 'Encounter', 'monsters', selectedMonsters);\n  }\n\n  deleteMonster = (delta) => {\n    const selectedMonsters = this.state.selectedMonsters.reduce(( acc, monster, index ) => {\n      if (index !== delta) {\n        acc.push(monster);\n      }\n      return acc;\n    },[]);\n    this.setState({selectedMonsters: selectedMonsters});\n    this.props.updateData(this.props.parentId, 'Encounter', 'monsters', selectedMonsters);\n  }\n\n  render() {\n\n    let selectedMonsters = this.props.selectedMonsters ? this.props.selectedMonsters.map((monster, delta) => {\n      return this.getMonsterList(monster.id, delta, monster.count);\n    }) : [];\n\n    // If some locations are found, show them.\n    return (\n      <div>\n        <h3>Monsters\n          <button className=\"link\" onClick={this.addMonster}>\n            <i className=\"fas fa-spider\"></i>\n          </button>\n        </h3>\n        {selectedMonsters}\n      </div>\n    );\n  }\n}\n\nexport default MonsterList;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport MonsterList from \"components/MonsterList\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass Encounter extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Encounter';\n    this.state = {mapInput: false};\n  }\n\n  changeMap = () => {\n    this.setState({mapInput: !this.state.mapInput});\n  }\n\n  render() {\n    let mapPreview = this.props.data.map ? <button className=\"link\" onClick={(e) => this.props.open('image', 'Encounter', this.props.data.id, 'map')}><img src={this.props.data.map} className=\"map-preview\"/></button> : '';\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-skull-crossbones\"></i> Encounter</span>\n        </div>\n        <div className=\"card-body\">\n          <ContentEditable\n            tag=\"h2\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            className={[\"card-title\"]}\n          />\n          {mapPreview}\n          <div>\n            <button className=\"link\" onClick={this.changeMap}>\n              <i className=\"fas fa-map\"></i> Map\n            </button>\n            <ContentEditable\n              tag=\"p\"\n              onBlur={this.updateData}\n              name=\"map\"\n              content={this.props.data.map || ''}\n              placeholder=\"Image URL\"\n              className={[\"single-line\", !this.state.mapInput ? 'hidden' : '']}\n            />\n          </div>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"description\"\n            content={this.props.data.description || ''}\n            placeholder=\"Description\"\n          />\n          <MonsterList\n            parentId={this.props.data.id}\n            parentType={this.componentName}\n            updateData={this.props.updateData}\n            addData={this.props.addData}\n            allData={this.props.allData}\n            selectedMonsters={this.props.data.monsters}\n            monsterList={this.props.staticData['monsters']}\n          />\n          <h3>Tactics</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"tactics\"\n            content={this.props.data.tactics || ''}\n            placeholder=\"none\"\n          />\n          <h3>Environmental</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"environmental\"\n            content={this.props.data.environmental || ''}\n            placeholder=\"none\"\n          />\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['encounter-map', 'encounter-tracker', 'delete'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Encounter;\n","import React from \"react\";\nimport Card from \"components/Card\";\n\nclass Search extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Search';\n    this.state = {\n      search: ''\n    }\n  }\n\n  search = (e) => {\n    this.setState({search: e.target.value});\n  }\n\n  render() {\n    let filtered = [];\n    let dataStoreTypes = this.props.getDataStoreTypes();\n    for (let key in dataStoreTypes) {\n      if (dataStoreTypes[key].component !== 'Interaction') {\n        filtered.push(this.props.allData[dataStoreTypes[key].store].reduce((accumulator, item, delta) => {\n          if (item.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n            accumulator.push(<li key={delta}>\n              <span className=\"fa-li\"><i className={[dataStoreTypes[key].icon, 'fa'].join(' ')}></i></span>\n              <span className=\"card-minor-minor\">{item.type || item.role}</span>\n              <button\n                className=\"link\"\n                onClick={() => this.props.showCard(dataStoreTypes[key].component, item.id)}>\n                  {item.name}\n              </button>\n            </li>);\n          }\n          return accumulator;\n        }, []));\n      }\n    }\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-search\"></i> </span>\n        </div>\n\n        <div className=\"card-body\">\n          <div className=\"search-box\">\n            <input type=\"text\" onChange={this.search} placeholder=\"Search\"/>\n          </div>\n          <ul className=\"fa-ul search-results\">\n            {filtered}\n          </ul>\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass PlayerStat extends React.PureComponent {\n\n  updateData = (id, name, value) => {\n    this.props.updateData(this.props.data.id, 'PlayerStat', name, value);\n  }\n\n  render() {\n\n    return (\n      <tr>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"class\"\n            content={this.props.data.class || ''}\n            placeholder=\"Class\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"pp\"\n            content={this.props.data.pp || ''}\n            placeholder=\"PP\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"ac\"\n            content={this.props.data.ac || ''}\n            placeholder=\"AC\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"proficiencies\"\n            content={this.props.data.proficiencies || ''}\n            placeholder=\"Proficiencies\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"languages\"\n            content={this.props.data.languages || ''}\n            placeholder=\"Languages\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <button className=\"link\" onClick={(e) => {this.props.deleteData('PlayerStat', this.props.data.id)}}>\n            <i className=\"fas fa-times\"></i>\n          </button>\n        </td>\n      </tr>\n    );\n\n  }\n}\n\nexport default PlayerStat;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport PlayerStat from 'components/PlayerStat';\n\nclass PlayerStats extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'PlayerStats';\n  }\n\n  render() {\n\n    const data = this.props.allData['playerStats'];\n    let playerStats = data.map((player, delta) => {\n      return <PlayerStat data={player} updateData={this.props.updateData} deleteData={this.props.deleteData}/>\n    });\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\">\n            <i className=\"fas fa-user-alt\"></i> Player stats\n          </span>\n        </div>\n        <div className=\"card-body\">\n          <table className=\"playerStats\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Class</th>\n                <th>PP</th>\n                <th>AC</th>\n                <th>Proficiencies</th>\n                <th>Languages</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>{playerStats}</tbody>\n          </table>\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['add-player-stat'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default PlayerStats;\n","import React from \"react\";\n\nclass Toolbar extends React.PureComponent {\n\n  render() {\n\n    return <section className=\"toolbar\">\n      <button onClick={() => this.props.showCard('Search')}><i className=\"fas fa-fw fa-search\"></i></button>\n      <button onClick={() => this.props.newCard('Location', null)}><i className=\"fas fa-fw fa-globe-americas\"></i></button>\n      <button onClick={() => this.props.newCard('Character', null)}><i className=\"fas fa-fw fa-user-alt\"></i></button>\n      <button onClick={() => this.props.newCard('Quest', null)}><i className=\"fas fa-fw fa-scroll\"></i></button>\n      <button onClick={() => this.props.newCard('Encounter', null)}><i className=\"fas fa-fw fa-skull-crossbones\"></i></button>\n      <button onClick={() => this.props.showCard('PlayerStats', null)}><i className=\"fas fa-fw fa-users\"></i></button>\n    </section>;\n  }\n}\n\nexport default Toolbar;","import React from \"react\";\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\nimport Location from 'components/Location';\nimport Character from 'components/Character';\nimport Quest from 'components/Quest';\nimport Encounter from 'components/Encounter';\nimport Search from 'components/Search';\nimport PlayerStats from 'components/PlayerStats';\nimport Toolbar from \"components/Toolbar\";\nimport _ from \"lodash\";\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\nconst dataComponents = {\n  Location: Location,\n  Character: Character,\n  Quest: Quest,\n  Encounter: Encounter\n};\nconst toolboxComponents = {\n  Search: Search,\n  PlayerStats: PlayerStats\n}\n\nclass Grid extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const layout = JSON.parse(localStorage.getItem('gm-tools-layout')) || {\n      layout: [{\n        grid: {\n          i: 'n1',\n          x: 0,\n          y: 0,\n          w: 6,\n          h: 3,\n        },\n        component: {id:\"1\", type:\"Location\"}\n      }],\n      keyCounter: 2\n    };\n    this.state = {\n      layout: layout\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      className: \"layout\",\n      cols: { lg: 8, md: 10, sm: 6, xs: 4, xxs: 2 },\n      rowHeight: 100,\n      draggableHandle: \".card-header\"\n    };\n  }\n\n  createCard = el => {\n    let Component = dataComponents[el.component.type];\n    if (Component !== undefined) {\n      const data = this.props.getData(el.component.type, el.component.id);\n      const allData = this.props.getAllData();\n      const staticData = this.props.getStaticData();\n      return (\n        <div key={el.grid.i} data-grid={el.grid}>\n          <Component\n            data={data}\n            allData={allData}\n            staticData={staticData}\n            showCard={this.showCard}\n            newCard={this.newCard}\n            deleteCard={this.deleteCard}\n            updateData={this.props.updateData}\n            getAllDataByType={this.props.getAllDataByType}\n            getData={this.props.getData}\n            addData={this.props.addData}\n            open={this.props.open}\n          />\n          <span className=\"card-close\" onClick={(e) => this.closeCard(el.grid.i)}><i className=\"fas fa-times\"></i></span>\n        </div>\n      );\n    }\n\n    Component = toolboxComponents[el.component.type];\n    if (Component !== undefined) {\n      const allData = this.props.getAllData();\n      return (\n        <div key={el.grid.i} data-grid={el.grid}>\n          <Component\n            allData={allData}\n            showCard={this.showCard}\n            getData={this.props.getData}\n            getDataStoreTypes={this.props.getDataStoreTypes}\n            updateData={this.props.updateData}\n            deleteData={this.props.deleteData}\n            addData={this.props.addData}\n          />\n          <span className=\"card-close\" onClick={(e) => this.closeCard(el.grid.i)}><i className=\"fas fa-times\"></i></span>\n        </div>\n      );\n    }\n  }\n\n  showCard = (type, id) => {\n    let Component = dataComponents[type];\n    if (Component !== undefined) {\n      this.setState({\n        layout: {\n          layout: this.state.layout.layout.concat({\n            grid: {\n              i: 'n' + this.state.layout.keyCounter,\n              x: 0,\n              y: 0,\n              w: 2,\n              h: 4,\n            },\n            component: {id:id, type:type}\n          }),\n          keyCounter: this.state.layout.keyCounter + 1\n        }\n      });\n      return;\n    }\n\n    Component = toolboxComponents[type];\n    if (Component !== undefined) {\n      this.setState({\n        layout: {\n          layout: this.state.layout.layout.concat({\n            grid: {\n              i: 'n' + this.state.layout.keyCounter,\n              x: 0,\n              y: 0,\n              w: 2,\n              h: 4,\n            },\n            component: {type:type}\n          }),\n          keyCounter: this.state.layout.keyCounter + 1\n        }\n      });\n      return;\n    }\n\n  }\n\n  newCard = (type, parentId, parentType) => {\n    this.showCard(type, this.props.addData(type, parentId, parentType));\n  }\n\n  deleteCard = (type, id) => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.layout.layout = _.reject(stateCopy.layout.layout, function(o) { return o.component.id === id; });\n    this.setState(stateCopy);\n    this.props.deleteData(type, id);\n  }\n\n  closeCard = (i) => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.layout.layout = _.reject(stateCopy.layout.layout, function(o) { return o.grid.i === i; });\n    this.setState(stateCopy);\n  }\n\n  onLayoutChange = layout => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    for (let i in layout) {\n      stateCopy.layout.layout[i].grid = {...stateCopy.layout.layout[i].grid, ...layout[i]};\n    }\n    this.setState(stateCopy);\n    localStorage.setItem(\"gm-tools-layout\", JSON.stringify(stateCopy.layout));\n  }\n\n  render() {\n    return (\n      <div className=\"frame\">\n        <div className=\"grid\">\n          <ResponsiveReactGridLayout\n              {...this.props}\n              onLayoutChange={this.onLayoutChange}\n            >\n              {_.map(this.state.layout.layout, el => this.createCard(el))}\n          </ResponsiveReactGridLayout>\n        </div>\n        <Toolbar\n          newCard={this.newCard}\n          showCard={this.showCard}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Grid;\n","import React from \"react\";\nimport * as d3 from \"d3\";\n\nlet drag = false;\n\nclass EncounterMap extends React.Component {\n\n  constructor(props) {\n    super(props);\n    let data = this.props.getData('Encounter', this.props.id);\n    if (!data.grid) {\n      data.grid = {gridSize: 125, mapWidth: 2000, clearFog: false, fog: []};\n    }\n    this.state = {data: data};\n    this.revealToggle = true;\n    document.body.classList.add('encounter-map');\n  }\n\n  componentDidMount() {\n    document.getElementById('encounter-grid').addEventListener('mousedown', () => drag = true);\n    document.addEventListener('mouseup', () => {drag = false; this.saveFog(this)});\n\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.grid.mapHeight = document.getElementById('encounter-grid').offsetHeight;\n    this.setState(stateCopy);\n    this.drawGrid(stateCopy.data.grid);\n  }\n\n  resetGrid = () => {\n    let mapWidth = parseInt(document.getElementById('mapWidth').value);\n    let gridSize = parseInt(document.getElementById('gridSize').value);\n\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.grid['mapWidth'] = mapWidth;\n    stateCopy.data.grid['gridSize'] = gridSize;\n    stateCopy.data.grid.fog = [];\n    stateCopy.data.grid.clearFog = false;\n    this.setState(stateCopy);\n    this.drawGrid(stateCopy.data.grid);\n  }\n\n  drawGrid = (grid) => {\n    let size = grid.gridSize;\n    let rows = Math.ceil(grid.mapHeight / size);\n    let cols = Math.ceil(grid.mapWidth / size);\n    let fogs = grid.fog;\n    let clearFog = grid.clearFog;\n\n    function gridData() {\n      var data = [];\n      var xpos = 1;\n      var ypos = 1;\n      var width = size;\n      var height = size;\n\n      // iterate for rows\n\n      for (var row = 0; row < rows; row++) {\n        data.push([]);\n        // iterate for cells/columns inside rows\n        for (var col = 0; col < cols; col++) {\n          let reveal = true;\n          if (!clearFog) {\n            reveal = false;\n            for (const fog of fogs) {\n              if (parseInt(fog.row) === row && parseInt(fog.col) === col) {\n                reveal = true;\n                break;\n              }\n            }\n          }\n          data[row].push({\n            x: xpos,\n            y: ypos,\n            width: width,\n            height: height,\n            row: row,\n            col: col,\n            reveal: reveal\n          })\n          // increment the x position. I.e. move it over by 50 (width variable)\n          xpos += width;\n        }\n        // reset the x position after a row is complete\n        xpos = 1;\n        // increment the y position for the next row. Move it down 50 (height variable)\n        ypos += height;\n      }\n      return data;\n    }\n\n    d3.select(\"#encounter-grid__svg\").selectAll(\"*\").remove();\n\n    var dataGrid = d3.select(\"#encounter-grid__svg\")\n      .attr(\"width\",(cols * size) + \"px\")\n      .attr(\"height\",(rows * size) + \"px\");\n\n    var row = dataGrid.selectAll(\".row\")\n      .data(gridData)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\");\n\n    row.selectAll(\".square\")\n      .data(function(d) { return d; })\n      .enter().append(\"rect\")\n      .attr(\"class\",function(d) { return d.reveal ? 'square reveal' : 'square'; })\n      .attr(\"x\", function(d) { return d.x; })\n      .attr(\"y\", function(d) { return d.y; })\n      .attr(\"data-reveal\", function(d) { return d.reveal })\n      .attr(\"data-row\", function(d) { return d.row; })\n      .attr(\"data-col\", function(d) { return d.col; })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height; })\n      .on('mousedown', function(d) {\n          d3.select(this).attr(\"class\", \"square reveal\").attr('data-reveal', true);\n      })\n      .on('mouseover', function(d) {\n        if (drag) {\n          d3.select(this).attr(\"class\", \"square reveal\").attr('data-reveal', true);\n        }\n      });\n  }\n\n  saveFog = () => {\n    let fog = [];\n    const grid = document.querySelectorAll(\".square[data-reveal=true]\");\n    for (const gridItem of grid) {\n      fog.push({\n        row: gridItem.getAttribute('data-row'),\n        col: gridItem.getAttribute('data-col')\n      });\n    }\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.grid.fog = fog;\n    this.setState(stateCopy);\n    this.props.updateData(this.props.id, 'Encounter', 'grid', stateCopy.data.grid);\n  }\n\n  toggleFog = () => {\n    const grid = document.querySelectorAll(\".square[data-reveal=false]\");\n    for (const gridItem of grid) {\n      if (this.revealToggle) {\n        gridItem.classList.add(\"tempReveal\");\n      } else {\n        gridItem.classList.remove(\"tempReveal\");\n      }\n    }\n    this.revealToggle = !this.revealToggle;\n  }\n\n  clearFog = () => {\n    const grid = document.querySelectorAll(\".square[data-reveal=false]\");\n    for (const gridItem of grid) {\n      gridItem.classList.add(\"reveal\");\n    }\n\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.grid.fog = [];\n    stateCopy.data.grid.clearFog = true;\n    this.setState(stateCopy);\n    this.props.updateData(this.props.id, 'Encounter', 'grid', stateCopy.data.grid);\n  }\n\n  hideToolbar = () => {\n    document.getElementById('encounter-grid__controls').setAttribute('style', 'display: none;');\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"encounter-grid__controls\" id='encounter-grid__controls'>\n          <label>Map size</label>\n          <input type=\"number\" defaultValue={this.state.data.grid.mapWidth} id=\"mapWidth\"/>px\n          <label>Grid size</label>\n          <input type=\"number\" defaultValue={this.state.data.grid.gridSize} id=\"gridSize\"/>px\n          <input type=\"submit\" value=\"Reset grid\" onClick={this.resetGrid}/>\n          <input type=\"submit\" value=\"Toggle fog\" onClick={this.toggleFog}/>\n          <input type=\"submit\" value=\"Clear fog\" onClick={this.clearFog}/>\n          <input type=\"submit\" value=\"Hide controls\" onClick={this.hideToolbar}/>\n        </div>\n        <div\n          id=\"encounter-grid\"\n          className=\"encounter-grid\"\n        >\n          <img src={this.state.data.map} width={this.state.data.grid.mapWidth + 'px'}/>\n          <svg id=\"encounter-grid__svg\"></svg>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EncounterMap;\n","import React from \"react\";\n\nclass EncounterTracker extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {data: this.props.getData('Encounter', this.props.id)};\n    document.body.classList.add('encounter-tracker');\n  }\n\n  render() {\n    return (\n      <div>\n\n      </div>\n    )\n  }\n}\n\nexport default EncounterTracker;\n","import React from \"react\";\nimport Grid from 'components/Grid';\nimport EncounterMap from 'components/EncounterMap';\nimport EncounterTracker from 'components/EncounterTracker';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from \"react-router-dom\";\nimport _ from \"lodash\";\nimport monsters from 'data/monsters.json';\nimport '@fortawesome/fontawesome-free/js/all.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/styles.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: JSON.parse(localStorage.getItem('gm-tools-data')) || {\n        locations: [],\n        characters: [],\n        quests: [],\n        interactions: [],\n        nextId: 1\n      }\n    };\n    this.getData = this.getData.bind(this);\n    this.getAllDataByType = this.getAllDataByType.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.getAllData = this.getAllData.bind(this);\n    this.addData = this.addData.bind(this);\n    this.deleteData = this.deleteData.bind(this);\n    this.open = this.open.bind(this);\n    this.getDataStoreTypes = this.getDataStoreTypes.bind(this);\n  }\n\n  getDataStore = (type) => {\n    const stores = this.getDataStoreTypes();\n    for (let store in stores) {\n      if (stores[store].component === type) {\n        return stores[store].store;\n      }\n    }\n    return null;\n  }\n\n  getDataStoreTypes = () => {\n    return [\n      {component: 'Location', store: 'locations', icon: 'fa-globe-americas'},\n      {component: 'Character', store: 'characters', icon: 'fa-user-alt'},\n      {component: 'Quest', store: 'quests', icon: 'fa-scroll'},\n      {component: 'Encounter', store: 'encounters', icon: 'fa-skull-crossbones'},\n      {component: 'Interaction', store: 'interactions', icon: 'fa-people-arrows'},\n      {component: 'PlayerStat', store: 'playerStats', icon: 'fa-users'},\n    ];\n  }\n\n  getAllData = () => {\n    return this.state.data;\n  }\n\n  getData = (type, id) => {\n    id = parseInt(id);\n    let dataStore = this.getDataStore(type);\n    for (const delta in this.state.data[dataStore]) {\n      if (this.state.data[dataStore][delta].id === id) {\n        return this.state.data[dataStore][delta];\n      }\n    }\n  }\n\n  getStaticData = () => {\n    return {\"monsters\":monsters};\n  }\n\n  getAllDataByType = (type) => {\n    let dataStore = this.getDataStore(type);\n    return this.state.data[dataStore];\n  }\n\n  updateData = (id, type, name, value) => {\n    id = parseInt(id);\n    let dataStore = this.getDataStore(type);\n    for (let delta in this.state.data[dataStore]) {\n      if (this.state.data[dataStore][delta].id === id) {\n        let stateCopy = JSON.parse(JSON.stringify(this.state));\n        stateCopy.data[dataStore][delta][name] = value;\n        this.setState(stateCopy);\n        localStorage.setItem(\"gm-tools-data\", JSON.stringify(stateCopy.data));\n        return;\n      }\n    }\n  }\n\n  deleteData = (type, id) => {\n    let dataStore = this.getDataStore(type);\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data[dataStore] = _.reject(stateCopy.data[dataStore], function(o) { return o.id === id; });\n    this.setState(stateCopy);\n    localStorage.setItem(\"gm-tools-data\", JSON.stringify(stateCopy.data));\n  }\n\n  addData = (type, parentId, parentType) => {\n    let dataStore = this.getDataStore(type);\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.nextId++;\n    stateCopy.data[dataStore].push({\n      id: stateCopy.data.nextId,\n      parentId: parentId ? parentId : null,\n      parentType: parentType ? parentType : null,\n      name: 'New ' + type\n    });\n    this.setState(stateCopy);\n    localStorage.setItem(\"gm-tools-data\", JSON.stringify(stateCopy.data));\n    return stateCopy.data.nextId;\n  }\n\n  open = (style, type, id, field) => {\n    if (style === 'image') {\n      const imageData = this.getData(type, id);\n      if (imageData) {\n        let w = window.open('about:blank');\n        let image = new Image();\n        image.src = imageData[field];\n        image.style = \"width: 100%\";\n        setTimeout(function(){\n          w.document.write(image.outerHTML);\n        }, 0);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <main>\n        <Router>\n          <Switch>\n            <Route path=\"/encounter-map/:id\" children={<EncounterMapRoute getData={this.getData} updateData={this.updateData}/>}/>\n            <Route path=\"/encounter-tracker/:id\" children={<EncounterTrackerRoute getData={this.getData} updateData={this.updateData}/>}/>\n            <Route path=\"/\">\n              <Grid\n                getData={this.getData}\n                getAllDataByType={this.getAllDataByType}\n                updateData={this.updateData}\n                getAllData={this.getAllData}\n                getStaticData={this.getStaticData}\n                addData={this.addData}\n                deleteData={this.deleteData}\n                getDataStoreTypes={this.getDataStoreTypes}\n                open={this.open}\n              />\n            </Route>\n          </Switch>\n        </Router>\n      </main>\n    );\n\n  }\n}\n\nfunction EncounterMapRoute(props) {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    <EncounterMap\n      getData={props.getData}\n      updateData={props.updateData}\n      id={id}\n    />\n  );\n}\n\nfunction EncounterTrackerRoute(props) {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    <EncounterTracker\n      getData={props.getData}\n      updateData={props.updateData}\n      id={id}\n    />\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Card.js","components/ContentEditable.js","components/LocationList.js","components/CharacterList.js","components/InteractionList.js","components/Location.js","components/Character.js","components/Quest.js","components/MonsterList.js","components/Encounter.js","components/Search.js","components/PlayerStat.js","components/PlayerStats.js","components/Toolbar.js","components/Timeline.js","components/Grid.js","components/EncounterMap.js","components/EncounterTracker.js","App.js","serviceWorker.js","index.js","images/dnd-beyond-logo.svg"],"names":["Card","updateData","id","name","value","props","data","componentName","updateDataLogEvent","logEvent","index","allData","parentId","addEvent","toolbar","tools","type","push","className","onClick","newCard","deleteCard","map","window","open","process","e","addData","React","PureComponent","ContentEditable","onBlur","evt","hasOwnProperty","target","innerText","trim","Element","this","tag","contentEditable","suppressContentEditableWarning","placeholder","join","content","Component","LocationList","filteredLocations","locations","reduce","accumulator","location","delta","key","showCard","length","CharacterList","filtered","characters","character","parentType","role","InteractionList","addInteraction","deleteInteraction","deleteData","interaction","style","position","right","top","Location","changeMap","setState","mapInput","state","parentLocation","parentLocationData","getData","class","float","mapPreview","src","description","Character","motivations","weaknesses","Quest","MonsterList","getMonsterList","selectedId","count","onChange","monsterList","monster","deleteMonster","deltaId","monsterId","selectedMonsters","addMonster","concat","acc","bind","Encounter","onDrop","picture","pictureDataURLs","datas","wantedWidth","wantedHeight","img","document","createElement","onload","width","height","canvas","ctx","getContext","drawImage","toDataURL","withIcon","buttonText","imgExtension","maxFileSize","singleImage","withLabel","monsters","staticData","defaultValue","difficulty","tactics","environmental","treasure","outcome","Search","search","dataStoreTypes","getDataStoreTypes","includes","component","store","item","toLowerCase","icon","PlayerStat","pp","ac","proficiencies","languages","PlayerStats","playerStats","player","Toolbar","exportData","Blob","url","URL","createObjectURL","getElementById","href","download","Timeline","adjustTime","amount","stateCopy","JSON","parse","stringify","timeUp","min","parseInt","datetime","minute","hour","day","month","year","updateConfig","formatTime","formatDate","monthNames","formatShortDate","timeBetween","start","end","diff","datetimeToEpoc","minutes","niceText","years","months","days","hours","mins","newestToOldest","first","second","deleteEvent","getConfig","timeline","events","sort","event","title","summary","nextEvent","eventParent","getDataStore","dayBreak","HOUR","ResponsiveReactGridLayout","WidthProvider","Responsive","dataComponents","toolboxComponents","Grid","createCard","el","undefined","getAllData","getStaticData","grid","i","data-grid","getAllDataByType","closeCard","layout","keyCounter","x","y","w","h","_","reject","o","onLayoutChange","localStorage","setItem","getItem","body","classList","remove","add","cols","lg","md","sm","xs","xxs","rowHeight","draggableHandle","drag","EncounterMap","resetGrid","mapWidth","gridSize","offsetHeight","fog","clearFog","drawGrid","size","rows","Math","ceil","mapHeight","fogs","d3","selectAll","attr","xpos","ypos","row","col","reveal","enter","append","d","on","saveFog","querySelectorAll","gridItem","getAttribute","toggleFog","revealToggle","hideToolbar","setAttribute","addEventListener","EncounterTracker","getMonsterData","iframes","monsterData","dndbeyond","logo","EncounterMapRoute","useParams","EncounterTrackerRoute","App","stores","config","dataStore","callback","nextId","dataInit","dataMerged","field","imageData","image","Image","setTimeout","write","outerHTML","quests","encounters","interactions","path","children","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.65880ad2.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Card extends React.PureComponent {\n\n  updateData = (id, name, value) => {\n    this.props.updateData(this.props.data.id, this.componentName, name, value);\n  };\n\n  updateDataLogEvent = (id, name, value) => {\n    this.updateData(id, name, value);\n    this.logEvent();\n  };\n\n  logEvent = () => {\n    let logEvent = true;\n    for (const index in this.props.allData['events']) {\n      if (this.props.allData['events'][index].parentId === this.props.data.id) {\n        logEvent = false;\n        break;\n      }\n    }\n    if (logEvent) {\n      this.props.addEvent(this.props.data.id, this.componentName);\n    }\n  }\n\n  toolbar = tools => {\n    let toolbar = [];\n    tools = tools || ['delete'];\n    for (let type in tools) {\n      if (tools[type] === 'add-location') {\n        toolbar.push(\n          <button className=\"icon\" onClick={() => this.props.newCard('Location', this.props.data.id, this.componentName)}><i className=\"fas fa-fw fa-globe-americas\"></i></button>\n        );\n      } else if (tools[type] === 'add-character') {\n        toolbar.push(\n          <button className=\"icon\" onClick={() => this.props.newCard('Character', this.props.data.id, this.componentName)}><i className=\"fas fa-fw fa-user-alt\"></i></button>\n        );\n      } else if (tools[type] === 'add-encounter') {\n        toolbar.push(\n          <button className=\"icon\" onClick={() => this.props.newCard('Encounter', this.props.data.id, this.componentName)}><i className=\"fas fa-fw fa-skull-crossbones\"></i></button>\n        );\n      } else if (tools[type] === 'delete') {\n        toolbar.push(\n          <button className=\"icon\" onClick={() => this.props.deleteCard(this.componentName, this.props.data.id)}><i className=\"fas fa-fw fa-trash-alt\"></i></button>\n        );\n      } else if (tools[type] === 'encounter-map') {\n        if (this.props.data.map) {\n          toolbar.push(\n            <button className=\"icon\" onClick={() => window.open(process.env.PUBLIC_URL + '/encounter-map/' + this.props.data.id)}><i className=\"fas fa-fw fa-map\"></i></button>\n          );\n        }\n      } else if (tools[type] === 'encounter-tracker') {\n        toolbar.push(\n          <button className=\"icon\" onClick={() => window.open(process.env.PUBLIC_URL + '/encounter-tracker/' + this.props.data.id)}><i className=\"fas fa-fw fa-skull-crossbones\"></i></button>\n        );\n      } else if (tools[type] === 'add-player-stat') {\n        toolbar.push(\n          <button className=\"icon\" onClick={(e) => this.props.addData('PlayerStat')}><i className=\"fas fa-fw fa-plus\"></i></button>\n        );\n      } else if (tools[type] === 'event-rest-long') {\n        toolbar.push(\n          <button className=\"icon\" onClick={(e) => this.props.addEvent(-1, 'Long rest')}><i className=\"fas fa-fw fa-campground\"></i>L</button>\n        );\n      } else if (tools[type] === 'event-rest-short') {\n        toolbar.push(\n          <button className=\"icon\" onClick={(e) => this.props.addEvent(-1, 'Short rest')}><i className=\"fas fa-fw fa-campground\"></i>S</button>\n        );\n      } else if (tools[type] === 'event-travel') {\n        toolbar.push(\n          <button className=\"icon\" onClick={(e) => this.props.addEvent(-1, 'Travel')}><i className=\"fas fa-fw fa-route\"></i></button>\n        );\n      } else if (tools[type] === 'event-location-arrive') {\n        toolbar.push(\n          <button className=\"icon\" onClick={(e) => this.props.addEvent(this.props.data.id, 'Location')}><i className=\"fas fa-fw fa-map-marked-alt\"></i></button>\n        );\n      }\n    }\n    return toolbar;\n  };\n\n  render() {\n    return <section></section>;\n  }\n}\n\nexport default Card;","import React from \"react\";\n\nclass ContentEditable extends React.Component {\n\n  onBlur = (evt) => {\n    this.props.onBlur(this.props.hasOwnProperty('id') ? this.props.id : null, this.props.name, evt.target.innerText.trim());\n  };\n\n  render() {\n    const Element = `${this.props.tag}`;\n    return (\n      <Element\n        contentEditable={true}\n        suppressContentEditableWarning={true}\n        onBlur={this.onBlur}\n        placeholder={this.props.placeholder}\n        className={this.props.className ? this.props.className.join(' ') : ''}>\n          {this.props.content||''}\n      </Element>\n    );\n  }\n}\n\nexport default ContentEditable;\n","import React from \"react\";\n\nclass LocationList extends React.PureComponent {\n\n  render() {\n\n    const filteredLocations = this.props.locations.reduce((accumulator, location, delta) => {\n      if (location.parentId === this.props.parentId) {\n        accumulator.push(<li key={delta}>\n          <span className=\"card-minor-minor\">{location.type}</span>\n          <i className=\"fas fa-globe-americas\"></i>&nbsp;\n          <button\n            className=\"link\"\n            onClick={() => this.props.showCard('Location', location.id)}>\n              {location.name}\n          </button>\n        </li>);\n      }\n      return accumulator;\n    }, []);\n\n    // If some locations are found, show them.\n    if (filteredLocations.length) {\n      return (\n        <div>\n          <h3>Locations</h3>\n          <ul className=\"link-list\">\n            {filteredLocations}\n          </ul>\n        </div>\n      );\n    } else {\n      return '';\n    }\n  }\n}\n\nexport default LocationList;\n","import React from \"react\";\n\nclass CharacterList extends React.PureComponent {\n\n  render() {\n\n    const filtered = this.props.characters.reduce((accumulator, character, delta) => {\n      if (character.parentId === this.props.parentId && character.parentType === this.props.parentType) {\n        accumulator.push(<li key={delta}>\n          <span className=\"card-minor-minor\">{character.role}</span>\n          <i className=\"fas fa-user-alt\"></i>&nbsp;\n          <button\n            className=\"link\"\n            onClick={() => this.props.showCard('Character', character.id)}>\n              {character.name}\n          </button>\n        </li>);\n      }\n      return accumulator;\n    }, []);\n\n    // If some locations are found, show them.\n    if (filtered.length) {\n      return (\n        <div>\n          <h3>Characters</h3>\n          <ul className=\"link-list\">\n            {filtered}\n          </ul>\n        </div>\n      );\n    } else {\n      return '';\n    }\n  }\n}\n\nexport default CharacterList;\n","import React from \"react\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass InteractionList extends React.PureComponent {\n\n  updateData = (id, name, value) => {\n    this.props.updateData(id, \"Interaction\", name, value);\n    this.logEvent(id);\n  };\n\n  logEvent = (id) => {\n    let logEvent = true;\n    for (const index in this.props.allData['events']) {\n      if (this.props.allData['events'][index].parentId === id) {\n        logEvent = false;\n        break;\n      }\n    }\n    if (logEvent) {\n      this.props.addEvent(id, 'Interaction');\n    }\n  }\n\n  addInteraction = () => {\n    this.props.addData(\"Interaction\", this.props.parentId, this.props.parentType);\n  }\n\n  deleteInteraction = (id) => {\n    this.props.deleteData('Interaction', id);\n  }\n\n  render() {\n\n    const filtered = this.props.allData['interactions'].reduce((accumulator, interaction, delta) => {\n      if (interaction.parentId === this.props.parentId) {\n        accumulator.push(\n        <div style={{position: 'relative'}}>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={interaction.name || ''}\n            placeholder=\"name\"\n            id={interaction.id}\n          />\n          <button style={{position: 'absolute', right: 0, top: 0}} className=\"link\" onClick={(e) => {this.deleteInteraction(interaction.id)}}>\n            <i className=\"fas fa-times\"></i>\n          </button>\n        </div>\n        );\n      }\n      return accumulator;\n    }, []);\n\n    // If some locations are found, show them.\n    return (\n      <div>\n        <h3>Interactions\n          <button className=\"link\" onClick={this.addInteraction}>\n            <i className=\"fas fa-user-plus\"></i>\n          </button>\n        </h3>\n\n        {filtered}\n      </div>\n    );\n  }\n}\n\nexport default InteractionList;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport ContentEditable from \"components/ContentEditable\";\nimport LocationList from 'components/LocationList.js';\nimport CharacterList from 'components/CharacterList.js';\nimport InteractionList from \"components/InteractionList\";\n\nclass Location extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Location';\n    this.state = {mapInput: false};\n  }\n\n  changeMap = () => {\n    this.setState({mapInput: !this.state.mapInput});\n  }\n\n  render() {\n\n    let parentLocation = '';\n\n    if (this.props.data) {\n      const parentLocationData = this.props.getData('Location', this.props.data.parentId);\n\n      if (parentLocationData) {\n        parentLocation = <span class=\"card-minor\" style={{float: 'right'}}>\n          <i className=\"fas fa-globe-americas\"></i>\n          &nbsp;\n          <button\n            className=\"link\"\n            onClick={() => this.props.showCard('Location', parentLocationData.id)}>\n              {parentLocationData.name}\n          </button>\n        </span>\n      }\n    }\n\n    let mapPreview = this.props.data.map ? <button className=\"link\" onClick={(e) => this.props.open('image', 'Location', this.props.data.id, 'map')}><img src={this.props.data.map} className=\"map-preview\"/></button> : '';\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-globe-americas\"></i> Location</span>\n        </div>\n        <div className=\"card-body\">\n          <ContentEditable\n            tag=\"span\"\n            onBlur={this.updateData}\n            name=\"type\"\n            content={this.props.data.type || ''}\n            placeholder=\"Type\"\n            className={[\"card-minor\"]}\n          />\n          {parentLocation}\n          <ContentEditable\n            tag=\"h2\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            className={[\"card-title\"]}\n          />\n          {mapPreview}\n          <div>\n            <button className=\"link\" onClick={this.changeMap}>\n              <i className=\"fas fa-map\"></i> Map\n            </button>\n            <ContentEditable\n              tag=\"p\"\n              onBlur={this.updateData}\n              name=\"map\"\n              content={this.props.data.map || ''}\n              placeholder=\"Image URL\"\n              className={[\"single-line\", !this.state.mapInput ? 'hidden' : '']}\n            />\n          </div>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"description\"\n            content={this.props.data.description || ''}\n            placeholder=\"Description\"\n          />\n          <LocationList\n            locations={this.props.allData['locations']}\n            showCard={this.props.showCard}\n            parentId={this.props.data.id}\n            parentType=\"Location\"\n          />\n          <CharacterList\n            characters={this.props.allData['characters']}\n            showCard={this.props.showCard}\n            parentId={this.props.data.id}\n            parentType=\"Location\"\n          />\n          <InteractionList\n            parentId={this.props.data.id}\n            parentType={this.componentName}\n            updateData={this.props.updateData}\n            deleteData={this.props.deleteData}\n            addData={this.props.addData}\n            allData={this.props.allData}\n            addEvent={this.props.addEvent}\n          />\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['add-location', 'add-character', 'add-encounter', 'event-location-arrive', 'delete'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Location;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport InteractionList from \"components/InteractionList\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass Character extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Character';\n  }\n\n  render() {\n\n    const location = this.props.getData('Location', this.props.data.parentId);\n    let parentLocation = '';\n    if (location) {\n      parentLocation = <span class=\"card-minor\" style={{float: 'right'}}>\n        <i className=\"fas fa-globe-americas\"></i>\n        &nbsp;\n        <button\n          className=\"link\"\n          onClick={() => this.props.showCard('Location', location.id)}>\n            {location.name}\n        </button>\n      </span>\n    }\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-user-alt\"></i> Character</span>\n        </div>\n        <div className=\"card-body\">\n\n          <ContentEditable\n            tag=\"span\"\n            onBlur={this.updateData}\n            name=\"role\"\n            content={this.props.data.role || ''}\n            placeholder=\"Job/role\"\n            className={[\"card-minor\"]}\n          />\n          {parentLocation}\n          <ContentEditable\n            tag=\"h2\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            className={[\"card-title\"]}\n          />\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"description\"\n            content={this.props.data.description || ''}\n            placeholder=\"Description\"\n          />\n          <h3>Motivations</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"motivations\"\n            content={this.props.data.motivations || ''}\n            placeholder=\"none\"\n          />\n          <h3>Weaknesses</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"weaknesses\"\n            content={this.props.data.weaknesses || ''}\n            placeholder=\"none\"\n          />\n          <InteractionList\n            parentId={this.props.data.id}\n            parentType={this.componentName}\n            updateData={this.props.updateData}\n            deleteData={this.props.deleteData}\n            addData={this.props.addData}\n            allData={this.props.allData}\n            addEvent={this.props.addEvent}\n          />\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['delete'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Character;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass Quest extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Quest';\n  }\n\n  render() {\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-scroll\"></i> Quest</span>\n        </div>\n        <div className=\"card-body\">\n          <ContentEditable\n            tag=\"h2\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            className={[\"card-title\"]}\n          />\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"description\"\n            content={this.props.data.description || ''}\n            placeholder=\"Description\"\n          />\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar()}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Quest;\n","import React from \"react\";\n\nclass MonsterList extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {selectedMonsters: this.props.selectedMonsters || []};\n    this.updateData = this.updateData.bind(this);\n  }\n\n  getMonsterList = (selectedId, delta, count) => {\n    return <div>\n      <select onChange={(e) => {this.updateData(delta, e.target.value)}} value={selectedId}>\n        {this.props.monsterList.map((monster) => {\n          return <option value={monster.id}>{monster.name}</option>\n        })}\n      </select> x&nbsp;\n      <input type=\"number\" className=\"monster-count\" value={count} onChange={(e) => {this.updateData(delta, null, e.target.value)}}/>\n      &nbsp;\n      <button className=\"link\" onClick={(e) => {this.deleteMonster(delta)}}>\n        <i className=\"fas fa-times\"></i>\n      </button>\n    </div>\n  }\n\n  updateData = (deltaId, monsterId, count) => {\n    let selectedMonsters = this.state.selectedMonsters.map((monster, delta) => {\n      if (deltaId === delta) {\n        return {\n          id: monsterId || monster.id,\n          count: count || monster.count\n        }\n      }\n      return monster;\n    });\n    this.setState({selectedMonsters: selectedMonsters});\n    this.props.updateData(this.props.parentId, 'Encounter', 'monsters', selectedMonsters);\n  };\n\n  addMonster = () => {\n    const selectedMonsters = this.state.selectedMonsters.concat({id:1,count:1});\n    this.setState({selectedMonsters:selectedMonsters})\n    this.props.updateData(this.props.parentId, 'Encounter', 'monsters', selectedMonsters);\n  }\n\n  deleteMonster = (delta) => {\n    const selectedMonsters = this.state.selectedMonsters.reduce(( acc, monster, index ) => {\n      if (index !== delta) {\n        acc.push(monster);\n      }\n      return acc;\n    },[]);\n    this.setState({selectedMonsters: selectedMonsters});\n    this.props.updateData(this.props.parentId, 'Encounter', 'monsters', selectedMonsters);\n  }\n\n  render() {\n\n    let selectedMonsters = this.props.selectedMonsters ? this.props.selectedMonsters.map((monster, delta) => {\n      return this.getMonsterList(monster.id, delta, monster.count);\n    }) : [];\n\n    // If some locations are found, show them.\n    return (\n      <div>\n        <h3>Monsters\n          <button className=\"link\" onClick={this.addMonster}>\n            <i className=\"fas fa-spider\"></i>\n          </button>\n        </h3>\n        {selectedMonsters}\n      </div>\n    );\n  }\n}\n\nexport default MonsterList;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport MonsterList from \"components/MonsterList\";\nimport ContentEditable from \"components/ContentEditable\";\nimport ImageUploader from 'react-images-upload';\n\nclass Encounter extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Encounter';\n    this.state = {mapInput: false};\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  changeMap = () => {\n    this.setState({mapInput: !this.state.mapInput});\n  }\n\n  // Takes a data URI and returns the Data URI corresponding to the resized image at the wanted size.\n  onDrop = (picture, pictureDataURLs) => {\n    const datas = pictureDataURLs[0];\n    let wantedWidth = 200;\n    let wantedHeight = 200;\n\n    // We create an image to receive the Data URI\n    var img = document.createElement('img');\n\n    const id = this.props.data.id;\n    const updateData = this.updateData;\n\n    // When the event \"onload\" is triggered we can resize the image.\n    img.onload = function() {\n      if (img.width > img.height) {\n        wantedHeight = wantedHeight * (img.height / img.width);\n      } else {\n        wantedWidth = wantedWidth * (img.width / img.height);\n      }\n\n      // We create a canvas and get its context.\n      var canvas = document.createElement('canvas');\n      var ctx = canvas.getContext('2d');\n\n      // We set the dimensions at the wanted size.\n      canvas.width = wantedWidth;\n      canvas.height = wantedHeight;\n\n      // We resize the image with the canvas method drawImage();\n      ctx.drawImage(this, 0, 0, wantedWidth, wantedHeight);\n\n      updateData(id, 'map', canvas.toDataURL('image/jpeg', 60));\n    };\n\n    // We put the Data URI in the image's src attribute\n    img.src = datas;\n  }\n\n  render() {\n    let mapPreview = this.props.data.map ? <button className=\"link\" onClick={(e) => this.props.open('image', 'Encounter', this.props.data.id, 'map')}><img src={this.props.data.map} className=\"map-preview\"/></button> : '';\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-skull-crossbones\"></i> Encounter</span>\n        </div>\n        <div className=\"card-body\">\n          <ContentEditable\n            tag=\"h2\"\n            onBlur={this.updateData}\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            className={[\"card-title\"]}\n          />\n          {mapPreview}\n          <div>\n            <button className=\"link\" onClick={this.changeMap}>\n              <i className=\"fas fa-map\"></i> Map\n            </button>\n            <span className={!this.state.mapInput ? 'hidden' : ''}>\n              <ImageUploader\n                withIcon={true}\n                buttonText='Choose images'\n                onChange={this.onDrop}\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                maxFileSize={524288000}\n                singleImage={true}\n                withLabel={false}\n                withIcon={false}\n              />\n            </span>\n          </div>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"description\"\n            content={this.props.data.description || ''}\n            placeholder=\"Description\"\n          />\n          <MonsterList\n            parentId={this.props.data.id}\n            parentType={this.componentName}\n            updateData={this.props.updateData}\n            addData={this.props.addData}\n            allData={this.props.allData}\n            selectedMonsters={this.props.data.monsters}\n            monsterList={this.props.staticData['monsters']}\n          />\n          Difficulty:\n          <select defaultValue={this.props.data.difficulty} onChange={(e) => this.updateData(null, 'difficulty', e.target.value)}>\n            <option>Easy</option>\n            <option>Medium</option>\n            <option>Hard</option>\n            <option>Deadly</option>\n          </select>\n          <h3>Tactics</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"tactics\"\n            content={this.props.data.tactics || ''}\n            placeholder=\"none\"\n          />\n          <h3>Environmental</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"environmental\"\n            content={this.props.data.environmental || ''}\n            placeholder=\"none\"\n          />\n          <h3>Treasure</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateData}\n            name=\"treasure\"\n            content={this.props.data.treasure || ''}\n            placeholder=\"none\"\n          />\n          <h3>Outcome</h3>\n          <ContentEditable\n            tag=\"p\"\n            onBlur={this.updateDataLogEvent}\n            name=\"outcome\"\n            content={this.props.data.outcome || ''}\n            placeholder=\"none\"\n          />\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['encounter-map', 'encounter-tracker', 'delete'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Encounter;\n","import React from \"react\";\nimport Card from \"components/Card\";\n\nclass Search extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Search';\n    this.state = {\n      search: ''\n    }\n  }\n\n  search = (e) => {\n    this.setState({search: e.target.value});\n  }\n\n  render() {\n    let filtered = [];\n    const dataStoreTypes = this.props.getDataStoreTypes();\n    for (let key in dataStoreTypes) {\n      if (!['Interaction', 'PlayerStat', 'Timeline'].includes(dataStoreTypes[key].component)) {\n        if (this.props.allData[dataStoreTypes[key].store]) {\n          filtered.push(this.props.allData[dataStoreTypes[key].store].reduce((accumulator, item, delta) => {\n            if (item.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n              accumulator.push(<li key={delta}>\n                <span className=\"fa-li\"><i className={[dataStoreTypes[key].icon, 'fa'].join(' ')}></i></span>\n                <span className=\"card-minor-minor\">{item.type || item.role}</span>\n                <button\n                  className=\"link\"\n                  onClick={() => this.props.showCard(dataStoreTypes[key].component, item.id)}>\n                    {item.name}\n                </button>\n              </li>);\n            }\n            return accumulator;\n          }, []));\n        }\n      }\n    }\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-search\"></i> Search</span>\n        </div>\n\n        <div className=\"card-top\">\n            <input type=\"text\" onChange={this.search} placeholder=\"Search\"/>\n          </div>\n        <div className=\"card-body card-body--with-top\">\n\n          <ul className=\"fa-ul search-results\">\n            {filtered}\n          </ul>\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport ContentEditable from \"components/ContentEditable\";\n\nclass PlayerStat extends React.PureComponent {\n\n  updateData = (id, name, value) => {\n    this.props.updateData(this.props.data.id, 'PlayerStat', name, value);\n  }\n\n  render() {\n\n    return (\n      <tr>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"name\"\n            content={this.props.data.name || ''}\n            placeholder=\"Name\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"class\"\n            content={this.props.data.class || ''}\n            placeholder=\"Class\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"pp\"\n            content={this.props.data.pp || ''}\n            placeholder=\"PP\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"ac\"\n            content={this.props.data.ac || ''}\n            placeholder=\"AC\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"proficiencies\"\n            content={this.props.data.proficiencies || ''}\n            placeholder=\"Proficiencies\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <ContentEditable\n            tag=\"span\"\n            name=\"languages\"\n            content={this.props.data.languages || ''}\n            placeholder=\"Languages\"\n            onBlur={this.updateData}\n          />\n        </td>\n        <td>\n          <button className=\"link\" onClick={(e) => {this.props.deleteData('PlayerStat', this.props.data.id)}}>\n            <i className=\"fas fa-times\"></i>\n          </button>\n        </td>\n      </tr>\n    );\n\n  }\n}\n\nexport default PlayerStat;\n","import React from \"react\";\nimport Card from \"components/Card\";\nimport PlayerStat from 'components/PlayerStat';\n\nclass PlayerStats extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'PlayerStats';\n  }\n\n  render() {\n\n    const data = this.props.allData['playerStats'];\n    let playerStats = data.map((player, delta) => {\n      return <PlayerStat data={player} updateData={this.props.updateData} deleteData={this.props.deleteData}/>\n    });\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\">\n            <i className=\"fas fa-user-alt\"></i> Player stats\n          </span>\n        </div>\n        <div className=\"card-body\">\n          <table className=\"playerStats\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Class</th>\n                <th>PP</th>\n                <th>AC</th>\n                <th>Proficiencies</th>\n                <th>Languages</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>{playerStats}</tbody>\n          </table>\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['add-player-stat'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default PlayerStats;\n","import React from \"react\";\n\nclass Toolbar extends React.PureComponent {\n\n  exportData = () => {\n    var text = 'Some data I want to export';\n    var data = new Blob([text], {type: 'text/plain'});\n    var url = window.URL.createObjectURL(data);\n    document.getElementById('export_data').href = url;\n  }\n\n  render() {\n\n    return <section className=\"toolbar\">\n      <span className=\"title\"><i className=\"fas fa-fw fa-toolbox\"></i></span>\n      <button className=\"icon\" onClick={() => this.props.showCard('Search')}><i className=\"fas fa-fw fa-search\"></i></button>\n      <button className=\"icon\" onClick={() => this.props.newCard('Location', null)}><i className=\"fas fa-fw fa-globe-americas\"></i></button>\n      <button className=\"icon\" onClick={() => this.props.newCard('Character', null)}><i className=\"fas fa-fw fa-user-alt\"></i></button>\n      <button className=\"icon\" onClick={() => this.props.newCard('Quest', null)}><i className=\"fas fa-fw fa-scroll\"></i></button>\n      <button className=\"icon\" onClick={() => this.props.newCard('Encounter', null)}><i className=\"fas fa-fw fa-skull-crossbones\"></i></button>\n      <button className=\"icon\" onClick={() => this.props.showCard('PlayerStats', null)}><i className=\"fas fa-fw fa-users\"></i></button>\n      <button className=\"icon\" onClick={() => this.props.showCard('Timeline', null)}><i className=\"fas fa-fw fa-clock\"></i></button>\n      <a id=\"export_data\" href=\"\" download onClick={this.exportData}>Export</a>\n    </section>;\n  }\n}\n\nexport default Toolbar;","import React from \"react\";\nimport Card from \"components/Card\";\n\nconst YEAR = 518400;\nconst MONTH = 43200;\nconst DAY = 1440;\nconst HOUR = 60;\n\nclass Timeline extends Card {\n\n  constructor(props) {\n    super(props);\n    this.componentName = 'Timeline';\n    this.state = {\n      datetime: this.props.getConfig('datetime')['datetime'],\n      timeUp: true\n    };\n    this.monthNames = ['','Hammer','Alturiak','Ches','Tarsakh','Mirtul','Kythorn','Flamerule','Eleasis','Eleint','Marpenoth','Uktar','Nightal'];\n  }\n\n  adjustTime = (amount) => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    if (this.state.timeUp) {\n      let min = parseInt(stateCopy.datetime.minute) + amount;\n      while (true) {\n        if (min > 59) {\n          stateCopy.datetime.hour++;\n          if (stateCopy.datetime.hour > 23) {\n            stateCopy.datetime.day++;\n            stateCopy.datetime.hour = 0;\n            if (stateCopy.datetime.day > 30) {\n              stateCopy.datetime.month++;\n              stateCopy.datetime.day = 1;\n              if (stateCopy.datetime.month > 12) {\n                stateCopy.datetime.year++;\n                stateCopy.datetime.month = 1;\n              }\n            }\n          }\n          min = min - 60;\n        } else {\n          break;\n        }\n      }\n      stateCopy.datetime.minute = parseInt(min);\n    } else {\n      let min = parseInt(stateCopy.datetime.minute) - amount;\n      while (true) {\n        if (min < 0) {\n          stateCopy.datetime.hour--;\n          if (stateCopy.datetime.hour < 0) {\n            stateCopy.datetime.day--;\n            stateCopy.datetime.hour = 23;\n            if (stateCopy.datetime.day < 1) {\n              stateCopy.datetime.month--;\n              stateCopy.datetime.day = 30;\n              if (stateCopy.datetime.month < 1) {\n                stateCopy.datetime.year--;\n                stateCopy.datetime.month = 12;\n              }\n            }\n          }\n          min = min + 60;\n        } else {\n          break;\n        }\n      }\n      stateCopy.datetime.minute = parseInt(min);\n    }\n\n    this.setState(stateCopy);\n    this.props.updateConfig('datetime', stateCopy.datetime);\n  }\n\n  formatTime = (datetime) => {\n    if (datetime) {\n      const hour = datetime.hour === 0 ? 12 : datetime.hour > 12 ? datetime.hour - 12 : datetime.hour;\n      const min = datetime.minute < 10 ? '0' + datetime.minute  : datetime.minute;\n      const ampm = datetime.hour < 12 || datetime.hour === 24 ? 'AM' : 'PM';\n      return hour + ':' + min + ' ' + ampm;\n    }\n    return '';\n  }\n\n  formatDate = (datetime) => {\n    return datetime.day + ' ' + this.monthNames[datetime.month] + '(' + datetime.month + ') ' + datetime.year;\n  }\n\n  formatShortDate = (datetime) => {\n    return datetime.day + ' ' + this.monthNames[datetime.month];\n  }\n\n  timeBetween = (start, end) => {\n    if (start && end) {\n      let diff = this.datetimeToEpoc(start) - this.datetimeToEpoc(end);\n      if (diff === 0) {\n        return 'Now';\n      }\n      let niceText = [];\n      let years = 0;\n      let months = 0;\n      let days = 0;\n      let hours = 0;\n      let minutes = 0;\n      while(true) {\n        if (diff < YEAR) {\n          break;\n        }\n        diff -= YEAR;\n        years++;\n      }\n      while(true) {\n        if (diff < MONTH) {\n          break;\n        }\n        diff -= MONTH;\n        months++;\n      }\n      while(true) {\n        if (diff < DAY) {\n          break;\n        }\n        diff -= DAY;\n        days++;\n      }\n      while(true) {\n        if (diff < HOUR) {\n          break;\n        }\n        diff -= HOUR;\n        hours++;\n      }\n      minutes = diff;\n\n      if (years) {\n        niceText.push(years + ' year' + (years > 1 ? 's' : ''));\n      }\n      if (months) {\n        niceText.push(months + ' month' + (months > 1 ? 's' : ''));\n      }\n      if (days) {\n        niceText.push(days + ' day' + (days > 1 ? 's' : ''));\n      }\n      if (hours) {\n        niceText.push(hours + ' hour' + (hours > 1 ? 's' : ''));\n      }\n      if (minutes) {\n        niceText.push(minutes + ' minute' + (minutes > 1 ? 's' : ''));\n      }\n      return niceText.join(' ');\n    } else {\n      return 'Unknown';\n    }\n  }\n\n  datetimeToEpoc = (datetime) => {\n    let mins = 0;\n    mins += datetime.minute;\n    mins += datetime.hour * HOUR;\n    mins += datetime.day * DAY;\n    mins += datetime.month * MONTH;\n    mins += datetime.year * YEAR;\n    return mins;\n  }\n\n  timeUp = (timeUp) => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.timeUp = timeUp;\n    this.setState(stateCopy);\n  }\n\n  newestToOldest = (first, second) => {\n    const diff = this.datetimeToEpoc(second.datetime) - this.datetimeToEpoc(first.datetime);\n    if (diff === 0) {\n      return second.id - first.id;\n    }\n    return diff;\n  }\n\n  deleteEvent = (id) => {\n    this.props.deleteData('Timeline', id);\n  }\n\n  render() {\n    let timeline = [];\n\n    let events = this.props.allData['events'];\n    // Order events by date, newest to oldest.\n    events.sort(this.newestToOldest);\n\n    timeline = events.map((event, index) => {\n      let nextEvent = events[index-1];\n      let icon, title, summary;\n      switch(event.parentType) {\n        case 'Long rest':\n        case 'Short rest':\n          icon = 'fa-campground';\n          title = event.parentType;\n          break;\n        case 'Travel':\n          icon = 'fa-route';\n          title = event.parentType;\n          break;\n        default:\n          const eventParent = this.props.getData(event.parentType, event.parentId);\n          const dataStore = this.props.getDataStore(event.parentType);\n          icon = dataStore.icon;\n          title = eventParent.name;\n          switch (event.parentType) {\n            case 'Encounter':\n              title += ' - ' + eventParent.difficulty;\n              summary = eventParent.outcome;\n              break;\n            case 'Interaction':\n                const interactionParent = this.props.getData(eventParent.parentType, eventParent.parentId);\n                title = interactionParent.name;\n                summary = eventParent.name;\n                break;\n          }\n          break;\n      }\n\n      let timeBetween = this.timeBetween( nextEvent ? nextEvent.datetime : this.state.datetime, event.datetime);\n      if (nextEvent && timeBetween === 'Now') {\n        timeBetween = '';\n      } else {\n        timeBetween = '(' + timeBetween + ')';\n      }\n\n      let dayBreak = '';\n      if (nextEvent && nextEvent.datetime.day !== event.datetime.day) {\n        dayBreak = <li class=\"timeline__daybreak\">{this.formatShortDate(event.datetime)}</li>\n      }\n\n      return (\n        <>\n          {dayBreak}\n          <li>\n            <span className=\"fa-li\"><i className={\"fas \" + icon}></i></span>\n            <div className=\"timeline__event\">\n              <span className=\"card-minor-minor\">{this.formatTime(event.datetime)} {timeBetween}</span>\n              <span className=\"timeline__event-title\">{title}</span>\n              <span className=\"timeline__event-summary\">{summary}</span>\n            </div>\n            <button style={{position: 'absolute', right: 0, top: 0}} className=\"link\" onClick={(e) => {this.deleteEvent(event.id)}}>\n              <i className=\"fas fa-times\"></i>\n            </button>\n          </li>\n        </>\n      );\n    });\n\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <span className=\"card__type\"><i className=\"fas fa-clock\"></i> Timeline</span>\n        </div>\n        <div className=\"card-top\">\n          <div className=\"date\">\n            <span className=\"date__time\"><i className=\"fas fa-clock\"></i> {this.formatTime(this.state.datetime)}</span>\n            <span className=\"date__date\"><i className=\"fas fa-calendar-alt\"></i> {this.formatDate(this.state.datetime)}</span>\n          </div>\n          <div>\n            <button className=\"icon\" onClick={()=>this.adjustTime(15)}>15m</button>\n            <button className=\"icon\" onClick={()=>this.adjustTime(HOUR)}>1h</button>\n            <button className=\"icon\" onClick={()=>this.adjustTime(HOUR * 8)}>8h</button>\n            <button className=\"icon\" onClick={()=>this.adjustTime(DAY)}>1d</button>\n            <button className=\"icon\" onClick={()=>this.adjustTime(MONTH)}>1mon</button>\n            <button className=\"icon\" onClick={()=>this.adjustTime(YEAR)}>1year</button>\n            <button\n              className={\"icon time-switch\" + (this.state.timeUp ? ' active' : '')}\n              onClick={() => this.timeUp(true)}\n            >\n              +\n            </button>\n            <button\n              className={\"icon time-switch\" + (this.state.timeUp ? ' ' : ' active')}\n              onClick={() => this.timeUp(false)}\n            >\n              -\n            </button>\n          </div>\n        </div>\n        <div className=\"card-body card-body--timeline\">\n          <div className=\"timeline__line\"></div>\n          <ul className='fa-ul timeline'>\n            {timeline}\n          </ul>\n        </div>\n        <div className=\"card-footer\">\n          {this.toolbar(['event-rest-long', 'event-rest-short', 'event-travel'])}\n        </div>\n      </section>\n    );\n\n  }\n}\n\nexport default Timeline;\n","import React from \"react\";\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\nimport Location from 'components/Location';\nimport Character from 'components/Character';\nimport Quest from 'components/Quest';\nimport Encounter from 'components/Encounter';\nimport Search from 'components/Search';\nimport PlayerStats from 'components/PlayerStats';\nimport Toolbar from \"components/Toolbar\";\nimport Timeline from \"components/Timeline\";\nimport _ from \"lodash\";\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\nconst dataComponents = {\n  Location: Location,\n  Character: Character,\n  Quest: Quest,\n  Encounter: Encounter\n};\nconst toolboxComponents = {\n  Search: Search,\n  PlayerStats: PlayerStats,\n  Timeline: Timeline\n}\n\nclass Grid extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const layout = JSON.parse(localStorage.getItem('gm-tools-layout')) || {\n      layout: [],\n      keyCounter: 2\n    };\n    this.state = {\n      layout: layout\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      className: \"layout\",\n      cols: { lg: 8, md: 10, sm: 6, xs: 4, xxs: 2 },\n      rowHeight: 100,\n      draggableHandle: \".card-header\"\n    };\n  }\n\n  createCard = el => {\n    let Component = dataComponents[el.component.type];\n    if (Component !== undefined) {\n      const data = this.props.getData(el.component.type, el.component.id);\n      const allData = this.props.getAllData();\n      const staticData = this.props.getStaticData();\n      return (\n        <div key={el.grid.i} data-grid={el.grid}>\n          <Component\n            data={data}\n            allData={allData}\n            staticData={staticData}\n            showCard={this.showCard}\n            newCard={this.newCard}\n            deleteCard={this.deleteCard}\n            updateData={this.props.updateData}\n            getAllDataByType={this.props.getAllDataByType}\n            getData={this.props.getData}\n            addData={this.props.addData}\n            deleteData={this.props.deleteData}\n            open={this.props.open}\n            addEvent={this.props.addEvent}\n          />\n          <span className=\"card-close\" onClick={(e) => this.closeCard(el.grid.i)}><i className=\"fas fa-times\"></i></span>\n        </div>\n      );\n    }\n\n    Component = toolboxComponents[el.component.type];\n    if (Component !== undefined) {\n      const allData = this.props.getAllData();\n      return (\n        <div key={el.grid.i} data-grid={el.grid}>\n          <Component\n            allData={allData}\n            showCard={this.showCard}\n            getData={this.props.getData}\n            getDataStoreTypes={this.props.getDataStoreTypes}\n            getDataStore={this.props.getDataStore}\n            updateData={this.props.updateData}\n            deleteData={this.props.deleteData}\n            addData={this.props.addData}\n            getConfig={this.props.getConfig}\n            updateConfig={this.props.updateConfig}\n            addEvent={this.props.addEvent}\n          />\n          <span className=\"card-close\" onClick={(e) => this.closeCard(el.grid.i)}><i className=\"fas fa-times\"></i></span>\n        </div>\n      );\n    }\n  }\n\n  showCard = (type, id) => {\n    let Component = dataComponents[type];\n    if (Component !== undefined) {\n      this.setState({\n        layout: {\n          layout: this.state.layout.layout.concat({\n            grid: {\n              i: 'n' + this.state.layout.keyCounter,\n              x: 0,\n              y: 0,\n              w: 2,\n              h: 4,\n            },\n            component: {id:id, type:type}\n          }),\n          keyCounter: this.state.layout.keyCounter + 1\n        }\n      });\n      return;\n    }\n\n    Component = toolboxComponents[type];\n    if (Component !== undefined) {\n      this.setState({\n        layout: {\n          layout: this.state.layout.layout.concat({\n            grid: {\n              i: 'n' + this.state.layout.keyCounter,\n              x: 0,\n              y: 0,\n              w: 2,\n              h: 4,\n            },\n            component: {type:type}\n          }),\n          keyCounter: this.state.layout.keyCounter + 1\n        }\n      });\n      return;\n    }\n\n  }\n\n  newCard = (type, parentId, parentType) => {\n    let showCard = this.showCard;\n    this.props.addData(type, parentId, parentType, {}, (id) => {\n      showCard(type, id);\n    });\n  }\n\n  deleteCard = (type, id) => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.layout.layout = _.reject(stateCopy.layout.layout, function(o) { return o.component.id === id; });\n    this.setState(stateCopy);\n    this.props.deleteData(type, id);\n  }\n\n  closeCard = (i) => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.layout.layout = _.reject(stateCopy.layout.layout, function(o) { return o.grid.i === i; });\n    this.setState(stateCopy);\n  }\n\n  onLayoutChange = layout => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    for (let i in layout) {\n      stateCopy.layout.layout[i].grid = {...stateCopy.layout.layout[i].grid, ...layout[i]};\n    }\n    this.setState(stateCopy);\n    localStorage.setItem(\"gm-tools-layout\", JSON.stringify(stateCopy.layout));\n  }\n\n  render() {\n    if (!this.state.layout.layout.length) {\n      document.body.classList.add('empty');\n    } else {\n      document.body.classList.remove('empty');\n    }\n    return (\n      <div className=\"frame\">\n        <div className=\"start\">\n          <i className=\"fas fa-plus\"></i>\n          <div>Add a card using the toolbar</div>\n        </div>\n        <div className=\"grid\">\n          <ResponsiveReactGridLayout\n              {...this.props}\n              onLayoutChange={this.onLayoutChange}\n            >\n              {_.map(this.state.layout.layout, el => this.createCard(el))}\n          </ResponsiveReactGridLayout>\n        </div>\n        <Toolbar\n          newCard={this.newCard}\n          showCard={this.showCard}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Grid;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport ImageUploader from 'react-images-upload';\n\nlet drag = false;\n\nclass EncounterMap extends React.Component {\n\n  constructor(props) {\n    super(props);\n    let data = this.props.getData('Encounter', this.props.id);\n    if (!data.grid) {\n      data.grid = {gridSize: 125, mapWidth: 2000, clearFog: false, fog: []};\n    }\n    this.state = {data: data, map: ''};\n    this.revealToggle = true;\n    document.body.classList.add('encounter-map');\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  componentDidMount() {\n    document.getElementById('encounter-grid').addEventListener('mousedown', () => drag = true);\n    document.addEventListener('mouseup', () => {drag = false; this.saveFog(this)});\n\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.grid.mapHeight = document.getElementById('encounter-grid').offsetHeight;\n    this.setState(stateCopy);\n    this.drawGrid(stateCopy.data.grid);\n  }\n\n  resetGrid = () => {\n    let mapWidth = parseInt(document.getElementById('mapWidth').value);\n    let gridSize = parseInt(document.getElementById('gridSize').value);\n\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.grid['mapWidth'] = mapWidth;\n    stateCopy.data.grid['mapHeight'] = document.getElementById('encounter-grid').offsetHeight;\n    stateCopy.data.grid['gridSize'] = gridSize;\n    stateCopy.data.grid.fog = [];\n    stateCopy.data.grid.clearFog = false;\n    this.setState(stateCopy);\n    this.drawGrid(stateCopy.data.grid);\n  }\n\n  drawGrid = (grid) => {\n    let size = grid.gridSize;\n    let rows = Math.ceil(grid.mapHeight / size);\n    let cols = Math.ceil(grid.mapWidth / size);\n    let fogs = grid.fog;\n    let clearFog = grid.clearFog;\n\n    function gridData() {\n      var data = [];\n      var xpos = 1;\n      var ypos = 1;\n      var width = size;\n      var height = size;\n\n      // iterate for rows\n\n      for (var row = 0; row < rows; row++) {\n        data.push([]);\n        // iterate for cells/columns inside rows\n        for (var col = 0; col < cols; col++) {\n          let reveal = true;\n          if (!clearFog) {\n            reveal = false;\n            for (const fog of fogs) {\n              if (parseInt(fog.row) === row && parseInt(fog.col) === col) {\n                reveal = true;\n                break;\n              }\n            }\n          }\n          data[row].push({\n            x: xpos,\n            y: ypos,\n            width: width,\n            height: height,\n            row: row,\n            col: col,\n            reveal: reveal\n          })\n          // increment the x position. I.e. move it over by 50 (width variable)\n          xpos += width;\n        }\n        // reset the x position after a row is complete\n        xpos = 1;\n        // increment the y position for the next row. Move it down 50 (height variable)\n        ypos += height;\n      }\n      return data;\n    }\n\n    d3.select(\"#encounter-grid__svg\").selectAll(\"*\").remove();\n\n    var dataGrid = d3.select(\"#encounter-grid__svg\")\n      .attr(\"width\",(cols * size) + \"px\")\n      .attr(\"height\",(rows * size) + \"px\");\n\n    var row = dataGrid.selectAll(\".row\")\n      .data(gridData)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\");\n\n    row.selectAll(\".square\")\n      .data(function(d) { return d; })\n      .enter().append(\"rect\")\n      .attr(\"class\",function(d) { return d.reveal ? 'square reveal' : 'square'; })\n      .attr(\"x\", function(d) { return d.x; })\n      .attr(\"y\", function(d) { return d.y; })\n      .attr(\"data-reveal\", function(d) { return d.reveal })\n      .attr(\"data-row\", function(d) { return d.row; })\n      .attr(\"data-col\", function(d) { return d.col; })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height; })\n      .on('mousedown', function(d) {\n          d3.select(this).attr(\"class\", \"square reveal\").attr('data-reveal', true);\n      })\n      .on('mouseover', function(d) {\n        if (drag) {\n          d3.select(this).attr(\"class\", \"square reveal\").attr('data-reveal', true);\n        }\n      });\n  }\n\n  saveFog = () => {\n    let fog = [];\n    const grid = document.querySelectorAll(\".square[data-reveal=true]\");\n    for (const gridItem of grid) {\n      fog.push({\n        row: gridItem.getAttribute('data-row'),\n        col: gridItem.getAttribute('data-col')\n      });\n    }\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.grid.fog = fog;\n    this.setState(stateCopy);\n    this.props.updateData(this.props.id, 'Encounter', 'grid', stateCopy.data.grid);\n  }\n\n  toggleFog = () => {\n    const grid = document.querySelectorAll(\".square[data-reveal=false]\");\n    for (const gridItem of grid) {\n      if (this.revealToggle) {\n        gridItem.classList.add(\"tempReveal\");\n      } else {\n        gridItem.classList.remove(\"tempReveal\");\n      }\n    }\n    this.revealToggle = !this.revealToggle;\n  }\n\n  clearFog = () => {\n    const grid = document.querySelectorAll(\".square[data-reveal=false]\");\n    for (const gridItem of grid) {\n      gridItem.classList.add(\"reveal\");\n    }\n\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.data.grid.fog = [];\n    stateCopy.data.grid.clearFog = true;\n    this.setState(stateCopy);\n    this.props.updateData(this.props.id, 'Encounter', 'grid', stateCopy.data.grid);\n  }\n\n  hideToolbar = () => {\n    document.getElementById('encounter-grid__controls').setAttribute('style', 'display: none;');\n  }\n\n  onDrop(picture, pictureDataURLs) {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.map = pictureDataURLs;\n    this.setState(stateCopy);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"encounter-grid__controls\" id='encounter-grid__controls'>\n          <label>Map size</label>\n          <input type=\"number\" defaultValue={this.state.data.grid.mapWidth} id=\"mapWidth\"/>px\n          <label>Grid size</label>\n          <input type=\"number\" defaultValue={this.state.data.grid.gridSize} id=\"gridSize\"/>px\n          <input type=\"submit\" value=\"Reset grid\" onClick={this.resetGrid}/>\n          <input type=\"submit\" value=\"Toggle fog\" onClick={this.toggleFog}/>\n          <input type=\"submit\" value=\"Clear fog\" onClick={this.clearFog}/>\n          <input type=\"submit\" value=\"Hide overflow\" onClick={()=>{document.body.classList.add('encounter-map--hide-overflow')}}/>\n          <input type=\"submit\" value=\"Hide controls\" onClick={this.hideToolbar}/>\n          <ImageUploader\n            withIcon={true}\n            buttonText='Choose images'\n            onChange={this.onDrop}\n            imgExtension={['.jpg', '.gif', '.png', '.gif']}\n            maxFileSize={524288000}\n            singleImage={true}\n            withLabel={false}\n            withIcon={false}\n            buttonText='Load image'\n          />\n        </div>\n        <div\n          id=\"encounter-grid\"\n          className=\"encounter-grid\"\n        >\n          <img src={this.state.map} width={this.state.data.grid.mapWidth + 'px'}/>\n          <svg id=\"encounter-grid__svg\"></svg>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EncounterMap;\n","import React from \"react\";\nimport logo from '../images/dnd-beyond-logo.svg'; // Tell webpack this JS file uses this image\n\nclass EncounterTracker extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {data: this.props.getData('Encounter', this.props.id), monsters: this.props.getStaticData()['monsters'], iframes: []};\n    document.body.classList.add('encounter-tracker');\n  }\n\n  getMonsterData = (id) => {\n    for (const delta in this.state.monsters) {\n      if (parseInt(this.state.monsters[delta].id) === parseInt(id)) {\n        return this.state.monsters[delta];\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.data.monsters.map((monster, index) => {\n          const monsterData = this.getMonsterData(monster.id);\n          return <div>\n            <h2>{monsterData.name} x {monster.count} &nbsp;\n              <a href={monsterData.dndbeyond} target=\"_blank\">\n                <img src={logo} className=\"dndbeyond-logo\"/>\n              </a>\n             </h2>\n            {monster.count} x\n          </div>;\n        })}\n      </div>\n    )\n  }\n}\n\nexport default EncounterTracker;\n","import React from \"react\";\nimport Grid from 'components/Grid';\nimport EncounterMap from 'components/EncounterMap';\nimport EncounterTracker from 'components/EncounterTracker';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from \"react-router-dom\";\nimport _ from \"lodash\";\nimport monsters from 'data/monsters.json';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/styles.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: JSON.parse(localStorage.getItem('gm-tools-data')) || {\n        locations: [],\n        characters: [],\n        quests: [],\n        encounters: [],\n        interactions: [],\n        playerStats: [],\n        events: [],\n        nextId: 1\n      },\n      config: JSON.parse(localStorage.getItem('gm-tools-config')) || {\n        datetime: {\n          minute: 0,\n          hour: 0,\n          day: 1,\n          month: 1,\n          year: 1370\n        }\n      }\n    };\n    this.getData = this.getData.bind(this);\n    this.getAllDataByType = this.getAllDataByType.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.getAllData = this.getAllData.bind(this);\n    this.addData = this.addData.bind(this);\n    this.deleteData = this.deleteData.bind(this);\n    this.open = this.open.bind(this);\n    this.getDataStoreTypes = this.getDataStoreTypes.bind(this);\n    this.updateConfig = this.updateConfig.bind(this);\n    this.addEvent = this.addEvent.bind(this);\n    this.getDataStore = this.getDataStore.bind(this);\n  }\n\n  getDataStore = (type) => {\n    const stores = this.getDataStoreTypes();\n    for (let store in stores) {\n      if (stores[store].component === type) {\n        return stores[store];\n      }\n    }\n    return null;\n  }\n\n  getDataStoreTypes = () => {\n    return [\n      {component: 'Location', store: 'locations', icon: 'fa-globe-americas'},\n      {component: 'Character', store: 'characters', icon: 'fa-user-alt'},\n      {component: 'Quest', store: 'quests', icon: 'fa-scroll'},\n      {component: 'Encounter', store: 'encounters', icon: 'fa-skull-crossbones'},\n      {component: 'Interaction', store: 'interactions', icon: 'fa-people-arrows'},\n      {component: 'PlayerStat', store: 'playerStats', icon: 'fa-users'},\n      {component: 'Timeline', store: 'events', icon: 'fa-clock'},\n    ];\n  }\n\n  getAllData = () => {\n    return this.state.data;\n  }\n\n  getConfig = () => {\n    return this.state.config;\n  }\n\n  getData = (type, id) => {\n    id = parseInt(id);\n    let dataStore = this.getDataStore(type);\n    if (dataStore) {\n      for (const delta in this.state.data[dataStore.store]) {\n        if (this.state.data[dataStore.store][delta].id === id) {\n          return this.state.data[dataStore.store][delta];\n        }\n      }\n    }\n  }\n\n  getStaticData = () => {\n    return {\"monsters\": monsters};\n  }\n\n  getAllDataByType = (type) => {\n    let dataStore = this.getDataStore(type).store;\n    return this.state.data[dataStore];\n  }\n\n  updateData = (id, type, name, value) => {\n    this.setState((state, props) => {\n      id = parseInt(id);\n      let dataStore = this.getDataStore(type).store;\n      for (let delta in state.data[dataStore]) {\n        if (state.data[dataStore][delta].id === id) {\n          let stateCopy = JSON.parse(JSON.stringify(state));\n          stateCopy.data[dataStore][delta][name] = value;\n          localStorage.setItem(\"gm-tools-data\", JSON.stringify(stateCopy.data));\n          return stateCopy;\n        }\n      }\n    });\n  }\n\n  deleteData = (type, id) => {\n    this.setState((state, props) => {\n      let dataStore = this.getDataStore(type).store;\n      let stateCopy = JSON.parse(JSON.stringify(state));\n      stateCopy.data[dataStore] = _.reject(stateCopy.data[dataStore], function(o) { return o.id === id; });\n      localStorage.setItem(\"gm-tools-data\", JSON.stringify(stateCopy.data));\n      return stateCopy;\n    });\n  }\n\n  addData = (type, parentId, parentType, data, callback) => {\n    this.setState((state, props) => {\n      let dataStore = this.getDataStore(type).store;\n      let stateCopy = JSON.parse(JSON.stringify(state));\n      stateCopy.data.nextId++;\n      const dataInit = {\n        id: stateCopy.data.nextId,\n        parentId: parentId ? parentId : null,\n        parentType: parentType ? parentType : null,\n        name: 'New ' + type\n      };\n      const dataMerged = {...dataInit, ...data};\n      stateCopy.data[dataStore].push(dataMerged);\n      localStorage.setItem(\"gm-tools-data\", JSON.stringify(stateCopy.data));\n      if (callback) {\n        callback(stateCopy.data.nextId);\n      }\n      return stateCopy;\n    });\n  }\n\n  open = (style, type, id, field) => {\n    if (style === 'image') {\n      const imageData = this.getData(type, id);\n      if (imageData) {\n        let w = window.open('about:blank');\n        let image = new Image();\n        image.src = imageData[field];\n        image.style = \"width: 100%\";\n        setTimeout(function(){\n          w.document.write(image.outerHTML);\n        }, 0);\n      }\n    }\n  }\n\n  updateConfig = (name, value) => {\n    let stateCopy = JSON.parse(JSON.stringify(this.state));\n    stateCopy.config[name] = value;\n    this.setState(stateCopy);\n    localStorage.setItem(\"gm-tools-config\", JSON.stringify(stateCopy.config));\n  }\n\n  addEvent = (parentId, parentType) => {\n    this.addData('Timeline', parentId, parentType, {datetime: this.state.config.datetime});\n  }\n\n  render() {\n    return (\n      <main>\n        <Router>\n          <Switch>\n          path={}\n            <Route path={process.env.PUBLIC_URL + \"/encounter-map/:id\"} children={<EncounterMapRoute getData={this.getData} updateData={this.updateData}/>}/>\n            <Route path={process.env.PUBLIC_URL + \"/encounter-tracker/:id\"} children={<EncounterTrackerRoute getData={this.getData} updateData={this.updateData} getStaticData={this.getStaticData}/>}/>\n            <Route path={process.env.PUBLIC_URL + \"/\"}>\n              <Grid\n                getData={this.getData}\n                getAllDataByType={this.getAllDataByType}\n                updateData={this.updateData}\n                getAllData={this.getAllData}\n                getStaticData={this.getStaticData}\n                addData={this.addData}\n                deleteData={this.deleteData}\n                getDataStoreTypes={this.getDataStoreTypes}\n                getDataStore={this.getDataStore}\n                open={this.open}\n                getConfig={this.getConfig}\n                updateConfig={this.updateConfig}\n                addEvent={this.addEvent}\n              />\n            </Route>\n          </Switch>\n        </Router>\n      </main>\n    );\n\n  }\n}\n\nfunction EncounterMapRoute(props) {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    <EncounterMap\n      getData={props.getData}\n      updateData={props.updateData}\n      id={id}\n    />\n  );\n}\n\nfunction EncounterTrackerRoute(props) {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    <EncounterTracker\n      getData={props.getData}\n      updateData={props.updateData}\n      getStaticData={props.getStaticData}\n      id={id}\n    />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/dnd-beyond-logo.5b5a0482.svg\";"],"sourceRoot":""}